@extends('layouts.app')

@section('title', 'เพิ่มพนักงานใหม่')

@section('breadcrumb')
    <li class="breadcrumb-item"><a href="{{ route('employees.index') }}">จัดการพนักงาน</a></li>
    <li class="breadcrumb-item active">เพิ่มพนักงานใหม่</li>
@endsection

@section('content')
<!-- Page Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-0 text-primary fw-bold">
                    <i class="fas fa-user-plus me-2"></i>เพิ่มพนักงานใหม่
                </h1>
                <p class="text-muted mb-0">กรอกข้อมูลพนักงานใหม่เข้าระบบ (รองรับ Express v2.0)</p>
                <div class="mt-2">
                    <span class="badge bg-info">
                        <i class="fas fa-info-circle me-1"></i>
                        Email จะถูกสร้างอัตโนมัติจาก ชื่อ.ตัวแรกนามสกุล@โดเมน
                    </span>
                    <span class="badge bg-warning">
                        <i class="fas fa-bolt me-1"></i>
                        Express จะแสดงเฉพาะแผนกที่เปิดใช้งาน
                    </span>
                    <span class="badge bg-success">
                        <i class="fas fa-sync me-1"></i>
                        รหัสผ่าน Email = Login ระบบ (Auto Sync)
                    </span>
                </div>
            </div>
            <a href="{{ route('employees.index') }}" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>กลับ
            </a>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row text-center">
            <div class="col-md-3 mb-2">
                <button type="button" class="btn btn-outline-primary w-100" id="generateAllBtn">
                    <i class="fas fa-magic me-1"></i>สร้างทั้งหมดอัตโนมัติ
                </button>
                <div class="form-text mt-1">
                    <small class="text-muted">ต้องกรอกชื่อ-นามสกุล EN ก่อน</small>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <button type="button" class="btn btn-outline-info w-100" id="previewBtn">
                    <i class="fas fa-eye me-1"></i>ดูตัวอย่าง
                </button>
                <div class="form-text mt-1">
                    <small class="text-muted">ดูก่อนบันทึก</small>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <button type="button" class="btn btn-outline-warning w-100" id="clearAllBtn">
                    <i class="fas fa-trash me-1"></i>ล้างทั้งหมด
                </button>
                <div class="form-text mt-1">
                    <small class="text-muted">เริ่มใหม่</small>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <button type="button" class="btn btn-outline-success w-100" id="generateComputerBtn2">
                    <i class="fas fa-desktop me-1"></i>สร้างระบบคอมฯ
                </button>
                <div class="form-text mt-1">
                    <small class="text-muted">Username + Password</small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Form -->
<form id="employeeForm" action="{{ route('employees.store') }}" method="POST">
    @csrf
    
    <!-- Error Messages -->
    @if ($errors->any())
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <h6 class="fw-bold"><i class="fas fa-exclamation-triangle me-2"></i>กรุณาแก้ไขข้อผิดพลาดต่อไปนี้:</h6>
            <ul class="mb-0">
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    @endif
    
    <!-- ข้อมูลพื้นฐาน -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #f8f9fa;">
                    <i class="fas fa-user text-secondary" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ข้อมูลพื้นฐาน</h5>
                    <small class="text-muted">ข้อมูลส่วนตัวและการติดต่อ</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- รหัสพนักงาน -->
                <div class="col-md-6">
                    <label for="employee_code" class="form-label">รหัสพนักงาน</label>
                    <div class="input-group">
                        @php $userRole = auth()->user()->role ?? 'employee'; @endphp
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="กรอกรหัสพนักงาน หรือสร้างอัตโนมัติ">
                        @else
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="สร้างอัตโนมัติ" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="employee_code">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            สามารถกรอกเองหรือสร้างอัตโนมัติ เช่น EMP001
                        @else
                            รหัสจะถูกสร้างอัตโนมัติ เช่น EMP001 (เฉพาะ Admin แก้ไขได้)
                        @endif
                    </div>
                    @error('employee_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ID Keycard -->
                <div class="col-md-6">
                    <label for="keycard_id" class="form-label">ID Keycard</label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="กรอก ID Keycard หรือสร้างอัตโนมัติ">
                        @else
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="สร้างอัตโนมัติ" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="keycard_id">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            สามารถกรอกเองหรือสร้างอัตโนมัติ เช่น KC123456
                        @else
                            รหัสบัตรจะถูกสร้างอัตโนมัติ เช่น KC123456 (เฉพาะ Admin แก้ไขได้)
                        @endif
                    </div>
                    @error('keycard_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อภาษาไทย -->
                <div class="col-md-6">
                    <label for="first_name_th" class="form-label">
                        ชื่อภาษาไทย <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_th') is-invalid @enderror" 
                           id="first_name_th" name="first_name_th" value="{{ old('first_name_th') }}" 
                           placeholder="กรอกชื่อภาษาไทย" required>
                    @error('first_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- นามสกุลภาษาไทย -->
                <div class="col-md-6">
                    <label for="last_name_th" class="form-label">
                        นามสกุลภาษาไทย <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_th') is-invalid @enderror" 
                           id="last_name_th" name="last_name_th" value="{{ old('last_name_th') }}" 
                           placeholder="กรอกนามสกุลภาษาไทย" required>
                    @error('last_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อภาษาอังกฤษ -->
                <div class="col-md-6">
                    <label for="first_name_en" class="form-label">
                        ชื่อภาษาอังกฤษ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_en') is-invalid @enderror" 
                           id="first_name_en" name="first_name_en" value="{{ old('first_name_en') }}" 
                           placeholder="First Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ใช้เฉพาะตัวอักษร A-Z เท่านั้น (สำหรับสร้าง Username และ Express)
                        </small>
                    </div>
                    @error('first_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- นามสกุลภาษาอังกฤษ -->
                <div class="col-md-6">
                    <label for="last_name_en" class="form-label">
                        นามสกุลภาษาอังกฤษ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_en') is-invalid @enderror" 
                           id="last_name_en" name="last_name_en" value="{{ old('last_name_en') }}" 
                           placeholder="Last Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ใช้เฉพาะตัวอักษร A-Z เท่านั้น (สำหรับสร้าง Username และ Email)
                        </small>
                    </div>
                    @error('last_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- เบอร์โทร (อนุญาติซ้ำได้) -->
                <div class="col-md-6">
                    <label for="phone" class="form-label">
                        เบอร์โทรศัพท์ <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">อนุญาติซ้ำได้</span>
                    </label>
                    <input type="tel" class="form-control @error('phone') is-invalid @enderror" 
                           id="phone" name="phone" value="{{ old('phone') }}" 
                           placeholder="08x-xxx-xxxx" required>
                    <div class="form-text">
                        <small class="text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            สามารถใช้เบอร์โทรที่ซ้ำกันได้ (ครอบครัว/เพื่อนร่วมงาน)
                        </small>
                    </div>
                    @error('phone')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อเล่น -->
                <div class="col-md-6">
                    <label for="nickname" class="form-label">ชื่อเล่น</label>
                    <input type="text" class="form-control @error('nickname') is-invalid @enderror" 
                           id="nickname" name="nickname" value="{{ old('nickname') }}" 
                           placeholder="กรอกชื่อเล่น">
                    @error('nickname')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ระบบคอมพิวเตอร์ -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #f8f9fa;">
                    <i class="fas fa-desktop text-secondary" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ระบบคอมพิวเตอร์</h5>
                    <small class="text-muted">Username และรหัสผ่านสำหรับคอมพิวเตอร์</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="generateComputerBtn">
                <i class="fas fa-desktop me-1"></i>สร้างระบบคอมฯ
            </button>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Username -->
                <div class="col-md-6">
                    <label for="username" class="form-label">
                        Username (เปิดคอมพิวเตอร์) <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('username') is-invalid @enderror" 
                               id="username" 
                               name="username" 
                               value="{{ old('username') }}"
                               placeholder="จะสร้างจากชื่อ EN"
                               required>
                        <button type="button" class="btn btn-outline-primary" data-target="username">
                            <i class="fas fa-user"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        รูปแบบ: <strong>ชื่อ</strong> ภาษาอังกฤษตัวเล็ก (เช่น john)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                Username นี้จะใช้เป็นฐานในการสร้าง Email
                            </small>
                        </div>
                    </div>
                    @error('username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Computer Password -->
                <div class="col-md-6">
                    <label for="computer_password" class="form-label">Password (เปิดคอมพิวเตอร์)</label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="password" 
                                   class="form-control @error('computer_password') is-invalid @enderror" 
                                   id="computer_password" 
                                   name="computer_password" 
                                   value="{{ old('computer_password') }}"
                                   placeholder="Random 10 ตัวอักษร">
                            <button type="button" class="btn btn-outline-primary" data-target="computer_password">
                                <i class="fas fa-lock"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" data-toggle-password="computer_password">
                                <i class="fas fa-eye"></i>
                            </button>
                        @else
                            <input type="password" 
                                   class="form-control bg-light" 
                                   id="computer_password" 
                                   name="computer_password" 
                                   value="{{ old('computer_password') }}"
                                   placeholder="สร้างอัตโนมัติ"
                                   readonly>
                            <button type="button" class="btn btn-outline-primary" data-target="computer_password">
                                <i class="fas fa-lock"></i>
                            </button>
                        @endif
                    </div>
                    <div class="form-text">
                        รหัสผ่านสำหรับเปิดคอมพิวเตอร์
                        @if(!($userRole === 'super_admin' || $userRole === 'it_admin'))
                            <span class="text-warning">(มองไม่เห็น - เฉพาะ Admin)</span>
                        @endif
                    </div>
                    @error('computer_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Copier Code (ปรับเป็นไม่แสดงก่อน) -->
                <div class="col-md-6">
                    <label for="copier_code" class="form-label">
                        รหัสเครื่องถ่ายเอกสาร
                        <span class="badge bg-info ms-2">On Demand</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('copier_code') is-invalid @enderror" 
                               id="copier_code" 
                               name="copier_code" 
                               value="{{ old('copier_code') }}"
                               placeholder="กดปุ่มเพื่อสร้าง" 
                               maxlength="4">
                        <button type="button" class="btn btn-outline-primary" data-target="copier_code">
                            <i class="fas fa-print"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-mouse-pointer me-1"></i>
                            รหัส 4 หลักตัวเลข - กดปุ่มเมื่อต้องการสร้าง
                        </small>
                    </div>
                    @error('copier_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ระบบอีเมล -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #f8f9fa;">
                    <i class="fas fa-envelope text-secondary" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ระบบอีเมล</h5>
                    <small class="text-muted">อีเมลและรหัสผ่านสำหรับระบบอีเมล</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Email -->
                <div class="col-md-8">
                    <label for="email" class="form-label">
                        อีเมล <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="email" 
                               class="form-control @error('email') is-invalid @enderror" 
                               id="email" 
                               name="email" 
                               value="{{ old('email') }}"
                               placeholder="จะสร้างจากชื่อ.ตัวแรกนามสกุล"
                               required>
                        <select class="form-select" id="email_domain" style="max-width: 220px;">
                            <option value="bettersystem.co.th">@bettersystem.co.th</option>
                            <option value="better-groups.com">@better-groups.com</option>
                        </select>
                        <button type="button" class="btn btn-outline-primary" data-target="email">
                            <i class="fas fa-envelope"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        รูปแบบ: <strong>ชื่อ.ตัวแรกของนามสกุล@โดเมน</strong>
                        <div id="emailPreview" class="mt-2" style="display: none;">
                            <span class="text-success">ตัวอย่าง: </span>
                            <code class="text-primary" id="emailPreviewText"></code>
                        </div>
                        <div class="mt-2">
                            <small class="text-success">
                                <i class="fas fa-sync me-1"></i>
                                Email password จะ sync กับ Login password อัตโนมัติ
                            </small>
                        </div>
                    </div>
                    @error('email')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Email Password (จะ sync กับ Login password) -->
                <div class="col-md-4">
                    <label for="email_password" class="form-label">
                        Password อีเมล
                        <span class="badge bg-success ms-2">Auto Sync</span>
                    </label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="password" 
                                   class="form-control @error('email_password') is-invalid @enderror" 
                                   id="email_password" 
                                   name="email_password" 
                                   value="{{ old('email_password') }}"
                                   placeholder="รหัสเดียวกับ Login">
                            <button type="button" class="btn btn-outline-primary" data-target="email_password">
                                <i class="fas fa-lock"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" data-toggle-password="email_password">
                                <i class="fas fa-eye"></i>
                            </button>
                        @else
                            <input type="password" 
                                   class="form-control bg-light" 
                                   id="email_password" 
                                   name="email_password" 
                                   value="{{ old('email_password') }}"
                                   placeholder="รหัสเดียวกับ Login"
                                   readonly>
                            <button type="button" class="btn btn-outline-primary" data-target="email_password">
                                <i class="fas fa-lock"></i>
                            </button>
                        @endif
                    </div>
                    <div class="form-text">
                        <small class="text-success">
                            <i class="fas fa-link me-1"></i>
                            ใช้รหัสเดียวกับ Login ระบบ
                        </small>
                        @if(!($userRole === 'super_admin' || $userRole === 'it_admin'))
                            <div><span class="text-warning">(มองไม่เห็น - เฉพาะ Admin)</span></div>
                        @endif
                    </div>
                    @error('email_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- แผนกและสิทธิ์ -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #f8f9fa;">
                    <i class="fas fa-building text-secondary" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">แผนกและสิทธิ์</h5>
                    <small class="text-muted">แผนกการทำงานและสิทธิ์การใช้งาน</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Department -->
                <div class="col-md-6">
                    <label for="department_id" class="form-label">
                        แผนกการทำงาน <span class="text-danger">*</span>
                        <span class="badge bg-warning text-dark ms-2" id="expressIndicator" style="display: none;">
                            <i class="fas fa-bolt me-1"></i>Express Ready
                        </span>
                    </label>
                    <select class="form-select @error('department_id') is-invalid @enderror" 
                            id="department_id" 
                            name="department_id" 
                            required>
                        <option value="">เลือกแผนก</option>
                        @php
                            // ใช้ departments ที่ส่งมาจาก controller หรือ fallback
                            if (isset($departments) && is_object($departments)) {
                                $deptCollection = $departments;
                            } elseif (isset($departments) && is_array($departments)) {
                                $deptCollection = collect($departments);
                            } else {
                                // Fallback departments
                                $deptCollection = collect([
                                    (object)['id' => 1, 'name' => 'บัญชี', 'express_enabled' => true],
                                    (object)['id' => 2, 'name' => 'IT', 'express_enabled' => false],
                                    (object)['id' => 3, 'name' => 'ฝ่ายขาย', 'express_enabled' => false],
                                    (object)['id' => 4, 'name' => 'การตลาด', 'express_enabled' => false],
                                    (object)['id' => 5, 'name' => 'บุคคล', 'express_enabled' => false],
                                    (object)['id' => 6, 'name' => 'ผลิต', 'express_enabled' => false],
                                    (object)['id' => 7, 'name' => 'คลังสินค้า', 'express_enabled' => false],
                                    (object)['id' => 8, 'name' => 'บริหาร', 'express_enabled' => false],
                                ]);
                            }
                        @endphp
                        
                        @if($userRole === 'express')
                            @foreach($deptCollection->where('express_enabled', true) as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @else
                            @foreach($deptCollection as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @endif
                    </select>
                    @error('department_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                    @if($userRole === 'express')
                        <div class="form-text text-info">Express: สามารถเลือกเฉพาะแผนกที่รองรับ Express</div>
                    @elseif($userRole === 'super_admin')
                        <div class="form-text text-success">
                            <i class="fas fa-plus-circle me-1"></i>
                            SuperAdmin: สามารถจัดการ Express ของแผนกได้ใน
                            <a href="{{ route('departments.index') }}" target="_blank">หน้าจัดการแผนก</a>
                        </div>
                    @endif
                </div>

                <!-- Position -->
                <div class="col-md-6">
                    <label for="position" class="form-label">
                        ตำแหน่ง <span class="text-danger">*</span>
                    </label>
                    <input type="text" 
                           class="form-control @error('position') is-invalid @enderror" 
                           id="position" 
                           name="position" 
                           value="{{ old('position') }}"
                           placeholder="เช่น Developer, Accountant"
                           required>
                    @error('position')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Role -->
                <div class="col-md-6">
                    <label for="role" class="form-label">
                        สิทธิ์การใช้งาน <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('role') is-invalid @enderror" 
                            id="role" 
                            name="role" 
                            required>
                        <option value="">เลือกสิทธิ์</option>
                        <option value="employee" {{ old('role') == 'employee' ? 'selected' : '' }}>พนักงานทั่วไป (Employee)</option>
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <option value="hr" {{ old('role') == 'hr' ? 'selected' : '' }}>ฝ่ายบุคคล (HR)</option>
                            <option value="manager" {{ old('role') == 'manager' ? 'selected' : '' }}>ผู้จัดการ (Manager)</option>
                            <option value="express" {{ old('role') == 'express' ? 'selected' : '' }}>Express User</option>
                            @if($userRole === 'super_admin')
                                <option value="it_admin" {{ old('role') == 'it_admin' ? 'selected' : '' }}>IT Admin</option>
                            @endif
                        @endif
                    </select>
                    @error('role')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Status -->
                <div class="col-md-6">
                    <label for="status" class="form-label">
                        สถานะ <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('status') is-invalid @enderror" 
                            id="status" 
                            name="status" 
                            required>
                        <option value="active" {{ old('status') == 'active' ? 'selected' : '' }}>ใช้งาน (Active)</option>
                        <option value="inactive" {{ old('status') == 'inactive' ? 'selected' : '' }}>ไม่ใช้งาน (Inactive)</option>
                    </select>
                    @error('status')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- โปรแกรม Express (Dynamic v2.0) - ปรับแต่งใหม่ -->
    <div class="card mb-4" id="expressSection" style="display: none;">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-warning rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #fff8e1;">
                    <i class="fas fa-bolt text-warning" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">
                        โปรแกรม Express v2.0
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </h5>
                    <small class="text-muted">รองรับแผนกที่เปิดใช้งาน Express - ปรับแต่งใหม่</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-warning" id="generateExpressBtn">
                <i class="fas fa-bolt me-1"></i>สร้าง Express
            </button>
        </div>
        <div class="card-body">
            <div class="alert alert-success" role="alert">
                <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle me-2"></i>
                    <div>
                        <strong>Express v2.0 Enhanced:</strong> ระบบได้รับการปรับปรุง
                        <div class="mt-2">
                            <span class="badge bg-success me-1">
                                <i class="fas fa-user me-1"></i>Username: 1-7 ตัวอักษร
                            </span>
                            <span class="badge bg-info me-1">
                                <i class="fas fa-lock me-1"></i>Password: 4 ตัวเลข (ไม่ซ้ำ)
                            </span>
                            <span class="badge bg-warning text-dark">
                                <i class="fas fa-shield-alt me-1"></i>Admin Controlled
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row g-3">
                <!-- Express Username (ปรับแต่งใหม่: 1-7 ตัวอักษร) -->
                <div class="col-md-6">
                    <label for="express_username" class="form-label">
                        Username Express (1-7 ตัวอักษร)
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('express_username') is-invalid @enderror" 
                               id="express_username" 
                               name="express_username" 
                               value="{{ old('express_username') }}"
                               placeholder="จะสร้างจากชื่อ EN (1-7 ตัว)" 
                               maxlength="7">
                        <button type="button" class="btn btn-outline-primary" data-target="express_username">
                            <i class="fas fa-bolt"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <strong class="text-success">ปรับปรุงใหม่:</strong> ใช้ชื่อภาษาอังกฤษได้ 1-7 ตัวอักษร (ไม่ต้อง pad)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                ตัวอย่าง: "John" → "john", "Alexandra" → "alexand"
                            </small>
                        </div>
                    </div>
                    @error('express_username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Express Password (ปรับแต่งใหม่: 4 ตัวเลขไม่ซ้ำ) -->
                <div class="col-md-6">
                    <label for="express_password" class="form-label">
                        Password โปรแกรม Express
                        <span class="badge bg-success ms-2">Numbers Only</span>
                    </label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" 
                                   class="form-control @error('express_password') is-invalid @enderror" 
                                   id="express_password" 
                                   name="express_password" 
                                   value="{{ old('express_password') }}"
                                   placeholder="4 ตัวเลขไม่ซ้ำ" 
                                   maxlength="4"
                                   pattern="[0-9]{4}">
                            <button type="button" class="btn btn-outline-primary" data-target="express_password">
                                <i class="fas fa-lock"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" data-toggle-password="express_password">
                                <i class="fas fa-eye"></i>
                            </button>
                        @else
                            <input type="text" 
                                   class="form-control bg-light" 
                                   id="express_password" 
                                   name="express_password" 
                                   value="{{ old('express_password') }}"
                                   placeholder="สร้างอัตโนมัติ"
                                   readonly>
                            <button type="button" class="btn btn-outline-primary" data-target="express_password">
                                <i class="fas fa-lock"></i>
                            </button>
                        @endif
                    </div>
                    <div class="form-text">
                        <strong class="text-success">ปรับปรุงใหม่:</strong> 4 ตัวเลขที่ไม่ซ้ำกัน (เช่น 1234, 5678)
                        <div class="mt-1">
                            <small class="text-info">
                                <i class="fas fa-calculator me-1"></i>
                                ตัวอย่าง: 1357, 2468, 1029 (ไม่ซ้ำเลข)
                            </small>
                        </div>
                        @if(!($userRole === 'super_admin' || $userRole === 'it_admin'))
                            <div><span class="text-warning">(มองไม่เห็น - เฉพาะ Admin)</span></div>
                        @endif
                    </div>
                    @error('express_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- สิทธิ์พิเศษ (เพิ่มใหม่) -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-info rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #e3f2fd;">
                    <i class="fas fa-shield-alt text-info" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">สิทธิ์พิเศษ</h5>
                    <small class="text-muted">การอนุญาตใช้งานเพิ่มเติม</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- VPN Permission -->
                <div class="col-md-6">
                    <div class="card border-primary">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-shield-alt text-primary fa-2x"></i>
                            </div>
                            <h6 class="card-title">การใช้งาน VPN</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="vpn_access" 
                                       name="vpn_access" 
                                       value="1"
                                       {{ old('vpn_access') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="vpn_access">
                                    <span id="vpnStatus">{{ old('vpn_access') ? 'อนุญาต' : 'ไม่อนุญาต' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                อนุญาตให้เชื่อมต่อ VPN เพื่อทำงานจากที่บ้าน
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Color Printing Permission -->
                <div class="col-md-6">
                    <div class="card border-warning">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-palette text-warning fa-2x"></i>
                            </div>
                            <h6 class="card-title">การปริ้นสี</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="color_printing" 
                                       name="color_printing" 
                                       value="1"
                                       {{ old('color_printing') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="color_printing">
                                    <span id="printingStatus">{{ old('color_printing') ? 'อนุญาต' : 'ไม่อนุญาต' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                อนุญาตให้ใช้เครื่องพิมพ์สีในการพิมพ์เอกสาร
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row mt-3">
                <div class="col-12">
                    <div class="alert alert-info mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>หมายเหตุ:</strong> สิทธิ์พิเศษเหล่านี้สามารถปรับเปลี่ยนได้ภายหลังโดย Admin
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ระบบ Login (ปรับแต่งใหม่) -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px; background: #f8f9fa;">
                    <i class="fas fa-sign-in-alt text-secondary" style="font-size: 18px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ระบบ Login</h5>
                    <small class="text-muted">ข้อมูลสำหรับเข้าสู่ระบบ IT Management (Auto Sync)</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-success">
                <i class="fas fa-sync me-2"></i>
                <strong>ปรับปรุงใหม่:</strong> รหัสผ่าน Login จะใช้รหัสเดียวกับ Email อัตโนมัติ (ไม่ต้องจำหลายรหัส)
            </div>
            
            <div class="row g-3">
                <!-- Login Email (Auto-sync) -->
                <div class="col-md-6">
                    <label for="login_email" class="form-label">
                        Email สำหรับ Login
                        <span class="badge bg-success ms-2">Auto Sync</span>
                    </label>
                    <input type="email" 
                           class="form-control bg-light" 
                           id="login_email" 
                           name="login_email" 
                           value="{{ old('login_email') }}"
                           placeholder="จะใช้อีเมลเดียวกันข้างต้น"
                           readonly>
                    <div class="form-text text-success">
                        <i class="fas fa-link me-1"></i>
                        จะใช้อีเมลเดียวกันกับที่สร้างข้างต้น
                    </div>
                </div>

                <!-- System Password (ใช้รหัสเดียวกับ Email) -->
                <div class="col-md-6">
                    <label for="password" class="form-label">
                        Password สำหรับ Login ระบบ <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">Same as Email</span>
                    </label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="password" 
                                   class="form-control @error('password') is-invalid @enderror bg-light" 
                                   id="password" 
                                   name="password" 
                                   value="{{ old('password') }}"
                                   placeholder="รหัสเดียวกับ Email Password"
                                   readonly
                                   required>
                            <button type="button" class="btn btn-outline-success" id="syncPasswordBtn">
                                <i class="fas fa-sync"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" data-toggle-password="password">
                                <i class="fas fa-eye"></i>
                            </button>
                        @else
                            <input type="hidden" name="password" id="password_hidden">
                            <input type="password" 
                                   class="form-control bg-light" 
                                   id="password_display" 
                                   placeholder="รหัสเดียวกับ Email"
                                   readonly>
                            <button type="button" class="btn btn-outline-success" disabled>
                                <i class="fas fa-sync"></i>
                            </button>
                        @endif
                    </div>
                    <div class="form-text">
                        <div class="text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            <strong>ง่ายขึ้น:</strong> ใช้รหัสผ่านเดียวกันกับ Email (ไม่ต้องจำหลายรหัส)
                        </div>
                        @if(!($userRole === 'super_admin' || $userRole === 'it_admin'))
                            <div><span class="text-warning">(มองไม่เห็น - เฉพาะ Admin)</span></div>
                        @endif
                    </div>
                    @error('password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- Form Actions -->
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <a href="{{ route('employees.index') }}" 
                   class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>ยกเลิก
                </a>
                
                <button type="submit" 
                        class="btn btn-primary"
                        id="submitBtn">
                    <i class="fas fa-plus me-2"></i>สร้างพนักงาน
                </button>
            </div>
        </div>
    </div>
</form>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">
                    <i class="fas fa-eye me-2"></i>ตัวอย่างข้อมูลพนักงาน (Enhanced Version)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Preview content will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ปิด</button>
                <button type="button" class="btn btn-primary" onclick="submitForm()">
                    ยืนยันและบันทึก
                </button>
            </div>
        </div>
    </div>
</div>

@endsection

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 Employee Create Form Loaded - Express v2.0 Enhanced Ready');
    
    // Utility Functions
    const utils = {
        showLoading: (button) => {
            button.disabled = true;
            const originalText = button.innerHTML;
            button.dataset.originalText = originalText;
            button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>กำลังสร้าง...';
        },
        
        hideLoading: (button) => {
            button.disabled = false;
            if (button.dataset.originalText) {
                button.innerHTML = button.dataset.originalText;
            }
        },
        
        generateRandomString: (length, includeNumbers = true) => {
            const chars = includeNumbers ? 
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' :
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        },
        
        generateRandomNumber: (length) => {
            let result = '';
            for (let i = 0; i < length; i++) {
                result += Math.floor(Math.random() * 10);
            }
            return result;
        },
        
        // ✅ ฟังก์ชันใหม่: สร้างเลข 4 หลักไม่ซ้ำกัน
        generateUniqueNumbers: (length = 4) => {
            const digits = [];
            while (digits.length < length) {
                const digit = Math.floor(Math.random() * 10);
                if (!digits.includes(digit)) {
                    digits.push(digit);
                }
            }
            return digits.join('');
        },
        
        showNotification: (message, type = 'success') => {
            const alertClass = type === 'success' ? 'alert-success' : 
                              type === 'error' ? 'alert-danger' : 
                              type === 'warning' ? 'alert-warning' : 'alert-info';
            const iconClass = type === 'success' ? 'fa-check-circle' : 
                             type === 'error' ? 'fa-exclamation-triangle' :
                             type === 'warning' ? 'fa-exclamation-circle' : 'fa-info-circle';
            const alert = document.createElement('div');
            alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';
            alert.innerHTML = `
                <i class="fas ${iconClass} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }
    };
    
    // ✅ Enhanced Generator Functions
    const generators = {
        employeeCode: () => `EMP${utils.generateRandomNumber(3)}`,
        keycardId: () => `KC${utils.generateRandomNumber(6)}`,
        username: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && englishRegex.test(firstName)) {
                return firstName.toLowerCase();
            }
            return '';
        },
        email: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName && domain && englishRegex.test(firstName) && englishRegex.test(lastName)) {
                return `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
            }
            return '';
        },
        password: () => utils.generateRandomString(10, true),
        copierCode: () => utils.generateRandomNumber(4),
        
        // ✅ Enhanced Express Username: 1-7 ตัวอักษร (ไม่ต้อง pad)
        expressUsername: () => {
            const firstName = document.getElementById('first_name_en').value.trim().toLowerCase();
            if (firstName.length > 0) {
                // ใช้จำนวนตัวอักษรที่มี แต่ไม่เกิน 7 ตัว
                return firstName.length <= 7 ? firstName : firstName.substring(0, 7);
            }
            return utils.generateRandomString(5, false).toLowerCase();
        },
        
        // ✅ Enhanced Express Password: 4 ตัวเลขไม่ซ้ำกัน
        expressPassword: () => utils.generateUniqueNumbers(4)
    };
    
    // Auto-generation functions
    const autoGenerate = {
        username: () => {
            const username = generators.username();
            if (username) {
                document.getElementById('username').value = username;
                
                // Add animation
                const usernameInput = document.getElementById('username');
                usernameInput.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                usernameInput.style.transform = 'scale(1.02)';
                usernameInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    usernameInput.style.background = '';
                    usernameInput.style.transform = '';
                }, 1500);
                
                console.log('✅ Username generated:', username);
            }
        },
        
        email: () => {
            const email = generators.email();
            if (email) {
                document.getElementById('email').value = email;
                document.getElementById('login_email').value = email;
                autoGenerate.showEmailPreview();
                
                // ✅ Auto-sync password with email
                autoGenerate.syncPasswords();
                
                // Add subtle animation for both fields
                const emailInput = document.getElementById('email');
                const loginEmailInput = document.getElementById('login_email');
                
                [emailInput, loginEmailInput].forEach(input => {
                    if (input) {
                        input.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                        input.style.transform = 'scale(1.02)';
                        input.style.transition = 'all 0.3s ease';
                    }
                });
                
                setTimeout(() => {
                    [emailInput, loginEmailInput].forEach(input => {
                        if (input) {
                            input.style.background = '';
                            input.style.transform = '';
                        }
                    });
                }, 1500);
                
                console.log('✅ Email generated:', email);
            }
        },
        
        // ✅ ฟังก์ชันใหม่: Sync passwords
        syncPasswords: () => {
            const emailPassword = document.getElementById('email_password').value || generators.password();
            
            // Set email password if empty
            if (!document.getElementById('email_password').value) {
                document.getElementById('email_password').value = emailPassword;
            }
            
            // Sync with login password
            const passwordField = document.getElementById('password');
            const passwordHidden = document.getElementById('password_hidden');
            const passwordDisplay = document.getElementById('password_display');
            
            if (passwordField) passwordField.value = emailPassword;
            if (passwordHidden) passwordHidden.value = emailPassword;
            if (passwordDisplay) passwordDisplay.value = emailPassword;
            
            console.log('✅ Passwords synced:', emailPassword);
        },
        
        showEmailPreview: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const previewDiv = document.getElementById('emailPreview');
            const previewText = document.getElementById('emailPreviewText');
            
            if (!previewDiv || !previewText) return;
            
            // Validate English characters
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName) {
                if (englishRegex.test(firstName) && englishRegex.test(lastName)) {
                    const emailPreview = `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
                    previewText.textContent = emailPreview;
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-success';
                } else {
                    previewText.textContent = 'กรุณากรอกชื่อ-นามสกุลภาษาอังกฤษเท่านั้น';
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-warning';
                }
            } else {
                previewDiv.style.display = 'none';
            }
        }
    };
    
    // Event Handlers
    const eventHandlers = {
        handleMagicClick: async (event) => {
            const button = event.target.closest('[data-target]');
            if (!button) return;
            
            const target = button.dataset.target;
            const targetElement = document.getElementById(target);
            if (!targetElement) return;
            
            utils.showLoading(button);
            
            try {
                let value = '';
                
                switch (target) {
                    case 'employee_code':
                        value = generators.employeeCode();
                        break;
                    case 'keycard_id':
                        value = generators.keycardId();
                        break;
                    case 'username':
                        value = generators.username();
                        break;
                    case 'email':
                        value = generators.email();
                        break;
                    case 'computer_password':
                        value = generators.password();
                        break;
                    case 'email_password':
                        value = generators.password();
                        // ✅ Auto-sync with login password
                        autoGenerate.syncPasswords();
                        break;
                    case 'password':
                        // ✅ Use same as email password
                        const emailPass = document.getElementById('email_password').value || generators.password();
                        if (!document.getElementById('email_password').value) {
                            document.getElementById('email_password').value = emailPass;
                        }
                        value = emailPass;
                        break;
                    case 'copier_code':
                        value = generators.copierCode();
                        break;
                    case 'express_username':
                        value = generators.expressUsername();
                        break;
                    case 'express_password':
                        value = generators.expressPassword();
                        break;
                }
                
                if (value) {
                    targetElement.value = value;
                    
                    if (target === 'email') {
                        const loginEmail = document.getElementById('login_email');
                        if (loginEmail) loginEmail.value = value;
                        autoGenerate.showEmailPreview();
                        autoGenerate.syncPasswords();
                    }
                    
                    // Show different messages based on target
                    let message = '';
                    switch (target) {
                        case 'email':
                            message = `✅ สร้าง Email + Sync Password สำเร็จ: ${value}`;
                            break;
                        case 'username':
                            message = `✅ สร้าง Username สำเร็จ: ${value}`;
                            break;
                        case 'employee_code':
                            message = `✅ สร้างรหัสพนักงานสำเร็จ: ${value}`;
                            break;
                        case 'keycard_id':
                            message = `✅ สร้าง ID Keycard สำเร็จ: ${value}`;
                            break;
                        case 'express_username':
                            message = `✅ สร้าง Express Username สำเร็จ: ${value} (${value.length} ตัวอักษร)`;
                            break;
                        case 'express_password':
                            message = `✅ สร้างรหัส Express สำเร็จ: ${value} (4 ตัวเลขไม่ซ้ำ)`;
                            break;
                        case 'copier_code':
                            message = `✅ สร้างรหัสถ่ายเอกสารสำเร็จ: ${value}`;
                            break;
                        case 'email_password':
                            message = `✅ สร้าง Email Password + Sync Login สำเร็จ`;
                            break;
                        case 'password':
                            message = `✅ ใช้รหัสเดียวกับ Email สำเร็จ`;
                            break;
                        default:
                            message = `✅ สร้าง ${target} สำเร็จ: ${value}`;
                    }
                    
                    utils.showNotification(message);
                }
                
            } catch (error) {
                console.error(`Error generating ${target}:`, error);
                utils.showNotification(`❌ เกิดข้อผิดพลาดในการสร้าง ${target}`, 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        handlePasswordToggle: (event) => {
            const button = event.target.closest('[data-toggle-password]');
            if (!button) return;
            
            const target = button.dataset.togglePassword;
            const targetElement = document.getElementById(target);
            
            if (targetElement) {
                if (targetElement.type === 'password') {
                    targetElement.type = 'text';
                    button.innerHTML = '<i class="fas fa-eye-slash"></i>';
                } else {
                    targetElement.type = 'password';
                    button.innerHTML = '<i class="fas fa-eye"></i>';
                }
            }
        },
        
        // Updated Department Change Handler - Express v2.0
        handleDepartmentChange: () => {
            const departmentSelect = document.getElementById('department_id');
            const expressSection = document.getElementById('expressSection');
            const expressIndicator = document.getElementById('expressIndicator');
            
            if (!departmentSelect || !expressSection) {
                console.log('❌ Department select or express section not found');
                return;
            }
            
            const departmentId = departmentSelect.value;
            
            if (!departmentId) {
                expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                return;
            }
            
            console.log('🏢 Department selected ID:', departmentId);
            
            // ใช้ API ที่ตรวจสอบ express_enabled
            fetch(`/api/departments/is-accounting?department_id=${departmentId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.is_express_enabled) {
                        expressSection.style.display = 'block';
                        if (expressIndicator) expressIndicator.style.display = 'inline-block';
                        
                        // Auto-generate Express fields if name is available
                        const firstName = document.getElementById('first_name_en').value.trim();
                        if (firstName) {
                            const expressUsernameEl = document.getElementById('express_username');
                            const expressPasswordEl = document.getElementById('express_password');
                            
                            if (expressUsernameEl && !expressUsernameEl.value) {
                                expressUsernameEl.value = generators.expressUsername();
                            }
                            if (expressPasswordEl && !expressPasswordEl.value) {
                                expressPasswordEl.value = generators.expressPassword();
                            }
                        }
                        
                        utils.showNotification(`⚡ ${data.department_name}: เปิดใช้งาน Express แล้ว`, 'success');
                        console.log('✅ Express enabled for department:', data.department_name);
                    } else {
                        expressSection.style.display = 'none';
                        if (expressIndicator) expressIndicator.style.display = 'none';
                        
                        // Clear Express fields
                        const expressUsernameEl = document.getElementById('express_username');
                        const expressPasswordEl = document.getElementById('express_password');
                        
                        if (expressUsernameEl) expressUsernameEl.value = '';
                        if (expressPasswordEl) expressPasswordEl.value = '';
                        
                        if (data.department_name) {
                            console.log('🏢 Department changed to:', data.department_name, '- Express not enabled');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error checking Express eligibility:', error);
                    expressSection.style.display = 'none';
                    if (expressIndicator) expressIndicator.style.display = 'none';
                });
        },
        
        handleInputValidation: (event) => {
            const input = event.target;
            const englishRegex = /^[a-zA-Z\s]*$/;
            
            if (input.id === 'first_name_en' || input.id === 'last_name_en') {
                if (!englishRegex.test(input.value)) {
                    input.style.borderColor = '#dc3545';
                    input.style.boxShadow = '0 0 0 0.2rem rgba(220, 53, 69, 0.25)';
                    
                    // Show warning
                    let warningDiv = input.parentElement.querySelector('.english-warning');
                    if (!warningDiv) {
                        warningDiv = document.createElement('div');
                        warningDiv.className = 'english-warning mt-1 text-danger';
                        warningDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>กรุณากรอกเฉพาะตัวอักษร A-Z เท่านั้น';
                        input.parentElement.appendChild(warningDiv);
                    }
                    
                    // Remove non-English characters
                    input.value = input.value.replace(/[^a-zA-Z\s]/g, '');
                } else {
                    input.style.borderColor = '';
                    input.style.boxShadow = '';
                    
                    // Remove warning
                    const warningDiv = input.parentElement.querySelector('.english-warning');
                    if (warningDiv) {
                        warningDiv.remove();
                    }
                }
            }
        },
        
        handlePhoneFormat: (event) => {
            let value = event.target.value.replace(/\D/g, '');
            if (value.length >= 3 && value.length <= 6) {
                value = value.slice(0, 3) + '-' + value.slice(3);
            } else if (value.length > 6) {
                value = value.slice(0, 3) + '-' + value.slice(3, 6) + '-' + value.slice(6, 10);
            }
            event.target.value = value;
        },
        
        // ✅ Handle Special Permission Switches
        handlePermissionSwitches: () => {
            const vpnSwitch = document.getElementById('vpn_access');
            const printingSwitch = document.getElementById('color_printing');
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnSwitch && vpnStatus) {
                vpnSwitch.addEventListener('change', function() {
                    vpnStatus.textContent = this.checked ? 'อนุญาต' : 'ไม่อนุญาต';
                    vpnStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
            
            if (printingSwitch && printingStatus) {
                printingSwitch.addEventListener('change', function() {
                    printingStatus.textContent = this.checked ? 'อนุญาต' : 'ไม่อนุญาต';
                    printingStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
        }
    };
    
    // Form Actions
    const formActions = {
        generateAll: async () => {
            const button = document.getElementById('generateAllBtn');
            utils.showLoading(button);
            
            try {
                console.log('🎯 Starting generateAll Enhanced...');
                
                // Generate basic codes
                document.getElementById('employee_code').value = generators.employeeCode();
                document.getElementById('keycard_id').value = generators.keycardId();
                
                // Username และ Email generation
                if (document.getElementById('first_name_en').value) {
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                } else {
                    utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน จึงจะสร้าง Username และ Email ได้', 'error');
                    return;
                }
                
                // Generate passwords (Computer password แยกต่างหาก)
                document.getElementById('computer_password').value = generators.password();
                
                // ✅ Email password และ Login password ใช้รหัสเดียวกัน
                const sharedPassword = generators.password();
                document.getElementById('email_password').value = sharedPassword;
                document.getElementById('password').value = sharedPassword;
                
                // Copier code - ไม่สร้างอัตโนมัติ (On Demand)
                // document.getElementById('copier_code').value = generators.copierCode();
                
                // Express fields (ถ้าแสดงอยู่)
                const expressSection = document.getElementById('expressSection');
                if (expressSection && expressSection.style.display !== 'none') {
                    document.getElementById('express_username').value = generators.expressUsername();
                    document.getElementById('express_password').value = generators.expressPassword();
                }
                
                utils.showNotification('🎉 สร้างข้อมูลทั้งหมดสำเร็จ! (Enhanced Version)', 'success');
                
            } catch (error) {
                console.error('Error in generateAll:', error);
                utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        clearAll: () => {
            if (confirm('ต้องการล้างข้อมูลทั้งหมดหรือไม่?')) {
                document.getElementById('employeeForm').reset();
                
                const emailPreview = document.getElementById('emailPreview');
                const expressSection = document.getElementById('expressSection');
                const expressIndicator = document.getElementById('expressIndicator');
                const vpnStatus = document.getElementById('vpnStatus');
                const printingStatus = document.getElementById('printingStatus');
                
                if (emailPreview) emailPreview.style.display = 'none';
                if (expressSection) expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                if (vpnStatus) vpnStatus.textContent = 'ไม่อนุญาต';
                if (printingStatus) printingStatus.textContent = 'ไม่อนุญาต';
                
                // Re-generate initial codes (ยกเว้น copier code)
                setTimeout(() => {
                    document.getElementById('employee_code').value = generators.employeeCode();
                    document.getElementById('keycard_id').value = generators.keycardId();
                    // ไม่สร้าง copier code อัตโนมัติ
                }, 100);
                
                utils.showNotification('🗑️ ล้างข้อมูลทั้งหมดแล้ว', 'success');
            }
        },
        
        showPreview: () => {
            const formData = new FormData(document.getElementById('employeeForm'));
            const data = {};
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }
            
            const previewContent = document.getElementById('previewContent');
            if (!previewContent) return;
            
            // Get select values with text
            const departmentSelect = document.getElementById('department_id');
            const departmentName = departmentSelect && departmentSelect.selectedIndex > 0 ? 
                departmentSelect.options[departmentSelect.selectedIndex].textContent.trim() : '-';
                
            const roleSelect = document.getElementById('role');
            const roleName = roleSelect && roleSelect.selectedIndex > 0 ? 
                roleSelect.options[roleSelect.selectedIndex].textContent.trim() : '-';
                
            const statusSelect = document.getElementById('status');
            const statusName = statusSelect && statusSelect.selectedIndex > 0 ? 
                statusSelect.options[statusSelect.selectedIndex].textContent.trim() : '-';
            
            const emailDomain = document.getElementById('email_domain').value;
            
            // Check if Express data exists
            const hasExpress = data.express_username || data.express_password;
            const expressSection = document.getElementById('expressSection');
            const isExpressVisible = expressSection && expressSection.style.display !== 'none';
            
            // Check user role for password visibility
            const userRole = '{{ $userRole }}';
            const canSeePasswords = userRole === 'super_admin' || userRole === 'it_admin';
            
            // ✅ Get special permissions
            const vpnAccess = document.getElementById('vpn_access').checked;
            const colorPrinting = document.getElementById('color_printing').checked;
            
            previewContent.innerHTML = `
                <div class="row">
                    <!-- ข้อมูลพื้นฐาน -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h6 class="mb-0"><i class="fas fa-user me-2"></i>ข้อมูลพื้นฐาน</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>รหัสพนักงาน:</strong></td><td><span class="badge bg-secondary">${data.employee_code || '-'}</span></td></tr>
                                    <tr><td><strong>ID Keycard:</strong></td><td><span class="badge bg-info">${data.keycard_id || '-'}</span></td></tr>
                                    <tr><td><strong>ชื่อ-นามสกุล (ไทย):</strong></td><td class="fw-bold text-primary">${data.first_name_th || '-'} ${data.last_name_th || '-'}</td></tr>
                                    <tr><td><strong>ชื่อ-นามสกุล (อังกฤษ):</strong></td><td class="fw-bold">${data.first_name_en || '-'} ${data.last_name_en || '-'}</td></tr>
                                    <tr><td><strong>เบอร์โทร:</strong></td><td>${data.phone || '-'} <span class="badge bg-success">ซ้ำได้</span></td></tr>
                                    <tr><td><strong>ชื่อเล่น:</strong></td><td>${data.nickname ? `<span class="badge bg-light text-dark">"${data.nickname}"</span>` : '-'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ระบบคอมพิวเตอร์ -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0"><i class="fas fa-desktop me-2"></i>ระบบคอมพิวเตอร์</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Username:</strong></td><td><span class="badge bg-primary">${data.username || '-'}</span></td></tr>
                                    <tr><td><strong>Password คอมพิวเตอร์:</strong></td><td>${canSeePasswords ? (data.computer_password || '-') : '<span class="text-warning">••••••••</span>'}</td></tr>
                                    <tr><td><strong>รหัสถ่ายเอกสาร:</strong></td><td>${data.copier_code ? `<span class="badge bg-warning text-dark">${data.copier_code}</span>` : '<span class="text-muted">ยังไม่สร้าง</span>'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ระบบอีเมล -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-envelope me-2"></i>ระบบอีเมล</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>อีเมล:</strong></td><td class="fw-bold text-success">${data.email || '-'}</td></tr>
                                    <tr><td><strong>โดเมน:</strong></td><td><span class="badge bg-info">@${emailDomain}</span></td></tr>
                                    <tr><td><strong>Password อีเมล:</strong></td><td>${canSeePasswords ? (data.email_password || '-') : '<span class="text-warning">••••••••</span>'}</td></tr>
                                    <tr><td><strong>Login Email:</strong></td><td class="text-muted">${data.email || '-'} <small>(เหมือนกัน)</small></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- แผนกและสิทธิ์ -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0"><i class="fas fa-building me-2"></i>แผนกและสิทธิ์</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>แผนก:</strong></td><td><span class="badge bg-info">${departmentName}</span></td></tr>
                                    <tr><td><strong>ตำแหน่ง:</strong></td><td class="fw-bold">${data.position || '-'}</td></tr>
                                    <tr><td><strong>บทบาท:</strong></td><td><span class="badge bg-secondary">${roleName}</span></td></tr>
                                    <tr><td><strong>สถานะ:</strong></td><td><span class="badge bg-${data.status === 'active' ? 'success' : 'danger'}">${statusName}</span></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    ${isExpressVisible ? `
                    <!-- โปรแกรม Express v2.0 Enhanced -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0">
                                    <i class="fas fa-bolt me-2"></i>โปรแกรม Express v2.0
                                    <span class="badge bg-dark text-white ms-2">Enhanced</span>
                                </h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Express Username:</strong></td><td><span class="badge bg-warning text-dark">${data.express_username || '-'}</span> <small class="text-success">(${(data.express_username || '').length} ตัว)</small></td></tr>
                                    <tr><td><strong>Express Password:</strong></td><td>${canSeePasswords ? (data.express_password || '-') : '<span class="text-warning">••••</span>'} <small class="text-info">(4 ตัวเลขไม่ซ้ำ)</small></td></tr>
                                    <tr><td><strong>ประเภท:</strong></td><td><small class="text-muted">แผนกที่เปิดใช้งาน Express</small></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-check-circle me-1"></i>
                                    <small><strong>Enhanced:</strong> Username 1-7 ตัว, Password 4 ตัวเลขไม่ซ้ำ</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    ` : ''}
                    
                    <!-- สิทธิ์พิเศษ (ใหม่) -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-shield-alt me-2"></i>สิทธิ์พิเศษ</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>การใช้งาน VPN:</strong></td><td><span class="badge bg-${vpnAccess ? 'success' : 'secondary'}">${vpnAccess ? 'อนุญาต' : 'ไม่อนุญาต'}</span></td></tr>
                                    <tr><td><strong>การปริ้นสี:</strong></td><td><span class="badge bg-${colorPrinting ? 'warning text-dark' : 'secondary'}">${colorPrinting ? 'อนุญาต' : 'ไม่อนุญาত'}</span></td></tr>
                                    <tr><td><strong>ระดับสิทธิ์:</strong></td><td><small class="text-muted">${(vpnAccess || colorPrinting) ? 'มีสิทธิ์พิเศษ' : 'สิทธิ์พื้นฐาน'}</small></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ระบบ Login Enhanced-->
                    <div class="col-md-6 mb-4">
                        <div class="card border-dark">
                            <div class="card-header bg-dark text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-sign-in-alt me-2"></i>ระบบ Login
                                    <span class="badge bg-success ms-2">Enhanced</span>
                                </h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Login Email:</strong></td><td class="text-success">${data.email || '-'}</td></tr>
                                    <tr><td><strong>Password ระบบ:</strong></td><td>${canSeePasswords ? (data.password || '-') : '<span class="text-warning">••••••••</span>'}</td></tr>
                                    <tr><td><strong>Password Sync:</strong></td><td><span class="badge bg-success">เดียวกับ Email</span></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-link me-1"></i>
                                    <small><strong>ง่ายขึ้น:</strong> Email Password = Login Password</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Summary Cards -->
                <div class="row mt-4">
                    <!-- Password Summary -->
                    <div class="col-md-6 mb-3">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-key me-2"></i>สรุปรหัสผ่าน (Enhanced)
                                </h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-unstyled mb-0">
                                    <li><i class="fas fa-desktop text-primary me-2"></i><strong>Computer:</strong> ${canSeePasswords ? (data.computer_password || 'ยังไม่สร้าง') : '••••••••'} <small class="text-muted">(แยกต่างหาก)</small></li>
                                    <li><i class="fas fa-envelope text-info me-2"></i><strong>Email:</strong> ${canSeePasswords ? (data.email_password || 'ยังไม่สร้าง') : '••••••••'} <small class="text-success">(Sync กับ Login)</small></li>
                                    <li><i class="fas fa-sign-in-alt text-dark me-2"></i><strong>Login:</strong> ${canSeePasswords ? (data.password || 'ยังไม่สร้าง') : '••••••••'} <small class="text-success">(เดียวกับ Email)</small></li>
                                    ${isExpressVisible ? `<li><i class="fas fa-bolt text-warning me-2"></i><strong>Express:</strong> ${canSeePasswords ? (data.express_password || 'ยังไม่สร้าง') : '••••'} <small class="text-info">(4 ตัวเลขไม่ซ้ำ)</small></li>` : ''}
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- System Integration -->
                    <div class="col-md-6 mb-3">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-cogs me-2"></i>การเชื่อมต่อระบบ
                                </h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-unstyled mb-0">
                                    <li><i class="fas fa-check text-success me-2"></i><strong>Email System:</strong> ${data.email ? 'เชื่อมต่อแล้ว' : 'ยังไม่เชื่อมต่อ'}</li>
                                    <li><i class="fas fa-check text-success me-2"></i><strong>Computer Network:</strong> ${data.username ? 'เชื่อมต่อแล้ว' : 'ยังไม่เชื่อมต่อ'}</li>
                                    <li><i class="fas fa-check text-success me-2"></i><strong>Login System:</strong> ${data.password ? 'เชื่อมต่อแล้ว' : 'ยังไม่เชื่อมต่อ'}</li>
                                    ${isExpressVisible ? `<li><i class="fas fa-check text-success me-2"></i><strong>Express System:</strong> ${data.express_username ? 'เชื่อมต่อแล้ว' : 'ยังไม่เชื่อมต่อ'}</li>` : ''}
                                    <li><i class="fas fa-${vpnAccess ? 'check text-success' : 'times text-muted'} me-2"></i><strong>VPN Access:</strong> ${vpnAccess ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}</li>
                                    <li><i class="fas fa-${colorPrinting ? 'check text-success' : 'times text-muted'} me-2"></i><strong>Color Printing:</strong> ${colorPrinting ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                
                ${isExpressVisible ? `
                <!-- Express v2.0 Enhanced Summary -->
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0">
                                    <i class="fas fa-star me-2"></i>สรุป Express System v2.0 Enhanced
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6 class="text-warning"><i class="fas fa-bolt me-1"></i> ฟีเจอร์ที่ปรับปรุง</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-check text-success me-2"></i><strong>Username:</strong> ใช้ได้ 1-7 ตัวอักษร (ไม่ต้อง pad)</li>
                                            <li><i class="fas fa-check text-success me-2"></i><strong>Password:</strong> 4 ตัวเลขไม่ซ้ำกัน</li>
                                            <li><i class="fas fa-check text-success me-2"></i><strong>Dynamic Detection:</strong> แสดงตามแผนกที่เปิดใช้งาน</li>
                                            <li><i class="fas fa-check text-success me-2"></i><strong>Admin Control:</strong> ควบคุมโดย Admin</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-6">
                                        <h6 class="text-info"><i class="fas fa-info-circle me-1"></i> รายละเอียดเทคนิค</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-user me-2 text-muted"></i><strong>Username:</strong> ${(data.express_username || '').length} ตัวอักษร จากชื่อ EN</li>
                                            <li><i class="fas fa-lock me-2 text-muted"></i><strong>Password:</strong> ${data.express_password || 'xxxx'} (4 ตัวเลขไม่ซ้ำ)</li>
                                            <li><i class="fas fa-database me-2 text-muted"></i><strong>Storage:</strong> Database field ที่ปลอดภัย</li>
                                            <li><i class="fas fa-shield-alt me-2 text-muted"></i><strong>Security:</strong> Admin-only visibility</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                ` : `
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Express v2.0:</strong> ไม่แสดง Express section เนื่องจากแผนกที่เลือกไม่ได้เปิดใช้งาน Express 
                            หรือยังไม่ได้เลือกแผนก
                        </div>
                    </div>
                </div>
                `}
                
                <!-- Enhanced Features Summary -->
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-rocket me-2"></i>ฟีเจอร์ที่ปรับปรุงในเวอร์ชันนี้
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6 class="text-success"><i class="fas fa-plus-circle me-1"></i> เพิ่มใหม่</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-phone me-2 text-success"></i>เบอร์โทรอนุญาตซ้ำได้</li>
                                            <li><i class="fas fa-print me-2 text-success"></i>รหัสถ่ายเอกสาร On Demand</li>
                                            <li><i class="fas fa-sync me-2 text-success"></i>Password Email = Login (Auto Sync)</li>
                                            <li><i class="fas fa-shield-alt me-2 text-success"></i>สิทธิ์ VPN + Color Printing</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-6">
                                        <h6 class="text-warning"><i class="fas fa-wrench me-1"></i> ปรับปรุง</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-bolt me-2 text-warning"></i>Express Username: 1-7 ตัวอักษร</li>
                                            <li><i class="fas fa-calculator me-2 text-warning"></i>Express Password: 4 ตัวเลขไม่ซ้ำ</li>
                                            <li><i class="fas fa-eye me-2 text-warning"></i>Password Visibility ตาม Role</li>
                                            <li><i class="fas fa-toggle-on me-2 text-warning"></i>Enhanced Permission Switches</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Password Visibility Notice -->
                <div class="row mt-3">
                    <div class="col-12">
                        ${!canSeePasswords ? `
                        <div class="alert alert-warning">
                            <i class="fas fa-eye-slash me-2"></i>
                            <strong>หมายเหตุ:</strong> รหัสผ่านจะแสดงเป็น ••••••••• เนื่องจากสิทธิ์การเข้าถึง (เฉพาะ SuperAdmin และ IT Admin เท่านั้นที่เห็นได้)
                        </div>
                        ` : `
                        <div class="alert alert-success">
                            <i class="fas fa-shield-alt me-2"></i>
                            <strong>Admin Mode:</strong> คุณสามารถมองเห็นรหัสผ่านทั้งหมดได้ และสามารถดูข้อมูลย้อนหลังได้ในระบบ
                        </div>
                        `}
                    </div>
                </div>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        }
    };
    
    // Event Listeners Setup
    try {
        // Click handlers
        document.addEventListener('click', eventHandlers.handleMagicClick);
        document.addEventListener('click', eventHandlers.handlePasswordToggle);
        
        // Department change handler
        const departmentSelect = document.getElementById('department_id');
        if (departmentSelect) {
            departmentSelect.addEventListener('change', eventHandlers.handleDepartmentChange);
            console.log('✅ Department change listener attached (Express v2.0 Enhanced)');
        } else {
            console.log('❌ Department select not found');
        }
        
        // Phone format handler
        const phoneInput = document.getElementById('phone');
        if (phoneInput) {
            phoneInput.addEventListener('input', eventHandlers.handlePhoneFormat);
        }
        
        // English validation handlers
        const firstNameEn = document.getElementById('first_name_en');
        const lastNameEn = document.getElementById('last_name_en');
        
        if (firstNameEn) {
            firstNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            firstNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.username();
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                    
                    // Auto-generate Express fields if Express section is visible
                    const expressSection = document.getElementById('expressSection');
                    if (expressSection && expressSection.style.display !== 'none') {
                        const expressUsername = document.getElementById('express_username');
                        if (expressUsername && !expressUsername.value) {
                            expressUsername.value = generators.expressUsername();
                        }
                    }
                }, 300);
            });
        }
        
        if (lastNameEn) {
            lastNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            lastNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                }, 300);
            });
        }
        
        // Email domain change handler
        const emailDomain = document.getElementById('email_domain');
        if (emailDomain) {
            emailDomain.addEventListener('change', () => {
                autoGenerate.email();
                autoGenerate.showEmailPreview();
            });
        }
        
        // Email input sync with auto password sync
        const emailInput = document.getElementById('email');
        if (emailInput) {
            emailInput.addEventListener('input', (e) => {
                const loginEmail = document.getElementById('login_email');
                if (loginEmail) {
                    loginEmail.value = e.target.value;
                }
            });
        }
        
        // ✅ Email password sync handler
        const emailPasswordInput = document.getElementById('email_password');
        if (emailPasswordInput) {
            emailPasswordInput.addEventListener('input', (e) => {
                autoGenerate.syncPasswords();
            });
        }
        
        // ✅ Sync password button
        const syncPasswordBtn = document.getElementById('syncPasswordBtn');
        if (syncPasswordBtn) {
            syncPasswordBtn.addEventListener('click', () => {
                autoGenerate.syncPasswords();
                utils.showNotification('🔄 Sync รหัสผ่าน Email กับ Login สำเร็จ', 'success');
            });
        }
        
        // Quick Action buttons
        const generateAllBtn = document.getElementById('generateAllBtn');
        if (generateAllBtn) {
            generateAllBtn.addEventListener('click', formActions.generateAll);
        }
        
        const clearAllBtn = document.getElementById('clearAllBtn');
        if (clearAllBtn) {
            clearAllBtn.addEventListener('click', formActions.clearAll);
        }
        
        const previewBtn = document.getElementById('previewBtn');
        if (previewBtn) {
            previewBtn.addEventListener('click', formActions.showPreview);
        }
        
        // Computer generation buttons
        const generateComputerBtn2 = document.getElementById('generateComputerBtn2');
        if (generateComputerBtn2) {
            generateComputerBtn2.addEventListener('click', async () => {
                const button = generateComputerBtn2;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                    
                    document.getElementById('computer_password').value = generators.password();
                    // ไม่สร้าง copier code อัตโนมัติ (On Demand)
                    
                    utils.showNotification('💻 สร้างข้อมูลระบบคอมพิวเตอร์สำเร็จ!', 'success');
                } catch (error) {
                    console.error('Error in generateComputer:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        const generateComputerBtn = document.getElementById('generateComputerBtn');
        if (generateComputerBtn) {
            generateComputerBtn.addEventListener('click', async () => {
                const button = generateComputerBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                    
                    document.getElementById('computer_password').value = generators.password();
                    // ไม่สร้าง copier code อัตโนมัติ
                    
                    utils.showNotification('💻 สร้างข้อมูลระบบคอมพิวเตอร์สำเร็จ!', 'success');
                } catch (error) {
                    console.error('Error in generateComputer:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // Express generation button (Enhanced)
        const generateExpressBtn = document.getElementById('generateExpressBtn');
        if (generateExpressBtn) {
            generateExpressBtn.addEventListener('click', async () => {
                const button = generateExpressBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    const username = generators.expressUsername();
                    const password = generators.expressPassword();
                    
                    document.getElementById('express_username').value = username;
                    document.getElementById('express_password').value = password;
                    
                    utils.showNotification(`⚡ สร้างข้อมูล Express สำเร็จ! Username: ${username} (${username.length} ตัว), Password: ${password} (ไม่ซ้ำ)`, 'success');
                } catch (error) {
                    console.error('Error in generateExpress:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล Express', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // ✅ Setup permission switches
        eventHandlers.handlePermissionSwitches();
        
        // Form submit handler
        const employeeForm = document.getElementById('employeeForm');
        if (employeeForm) {
            employeeForm.addEventListener('submit', function(e) {
                const submitBtn = document.getElementById('submitBtn');
                if (submitBtn) {
                    utils.showLoading(submitBtn);
                }
            });
        }
        
        console.log('✅ All event listeners attached successfully (Express v2.0 Enhanced)');
        
    } catch (error) {
        console.error('❌ Error setting up event listeners:', error);
    }
    
    // Initial setup
    setTimeout(() => {
        console.log('🔧 Starting initial setup... (Express v2.0 Enhanced)');
        
        try {
            // Auto-generate employee code and keycard if empty
            const employeeCodeEl = document.getElementById('employee_code');
            const keycardIdEl = document.getElementById('keycard_id');
            
            if (employeeCodeEl && !employeeCodeEl.value) {
                employeeCodeEl.value = generators.employeeCode();
                console.log('✅ Employee code generated');
            }
            
            if (keycardIdEl && !keycardIdEl.value) {
                keycardIdEl.value = generators.keycardId();
                console.log('✅ Keycard ID generated');
            }
            
            // ไม่สร้าง copier code อัตโนมัติ (On Demand)
            
            // Initialize department change handler
            eventHandlers.handleDepartmentChange();
            
            // Force trigger department change if already selected
            const departmentSelect = document.getElementById('department_id');
            if (departmentSelect && departmentSelect.value) {
                console.log('🔄 Force triggering department change for:', departmentSelect.options[departmentSelect.selectedIndex]?.textContent);
                eventHandlers.handleDepartmentChange();
            }
            
            console.log('✅ Department handler initialized (Express v2.0 Enhanced)');
            
            // Initialize email preview
            autoGenerate.showEmailPreview();
            console.log('✅ Email preview initialized');
            
            // Initialize permission switches
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnStatus) vpnStatus.textContent = 'ไม่อนุญาต';
            if (printingStatus) printingStatus.textContent = 'ไม่อนุญาต';
            
            console.log('✅ Permission switches initialized');
            
            // Debug functions for testing (Enhanced)
            window.testExpress = function() {
                const expressSection = document.getElementById('expressSection');
                if (expressSection) {
                    expressSection.style.display = 'block';
                    console.log('✅ Express section manually shown');
                } else {
                    console.log('❌ Express section not found');
                }
            };
            
            window.testDepartmentChange = function() {
                eventHandlers.handleDepartmentChange();
                console.log('✅ Department change handler manually triggered (Express v2.0 Enhanced)');
            };
            
            window.testGenerateAll = function() {
                formActions.generateAll();
                console.log('✅ Generate all manually triggered (Enhanced)');
            };
            
            window.testExpressAPI = function() {
                const departmentId = document.getElementById('department_id').value;
                if (departmentId) {
                    fetch(`/api/departments/is-accounting?department_id=${departmentId}`)
                        .then(response => response.json())
                        .then(data => {
                            console.log('🔍 Express API Test Result:', data);
                            alert(`Express Enabled: ${data.is_express_enabled}\nDepartment: ${data.department_name}`);
                        })
                        .catch(error => console.error('Express API Test Error:', error));
                } else {
                    alert('กรุณาเลือกแผนกก่อน');
                }
            };
            
            window.testEnhancedFeatures = function() {
                console.log('🧪 Testing Enhanced Features:');
                console.log('   1. Express Username:', generators.expressUsername());
                console.log('   2. Express Password:', generators.expressPassword());
                console.log('   3. Unique Numbers:', utils.generateUniqueNumbers(4));
                autoGenerate.syncPasswords();
                console.log('   4. Password Sync: Completed');
            };
            
            console.log('🧪 Enhanced Debug functions available:');
            console.log('   - testExpress() - แสดง Express section');
            console.log('   - testDepartmentChange() - ทดสอบการเปลี่ยนแผนก');
            console.log('   - testGenerateAll() - ทดสอบสร้างข้อมูลทั้งหมด');
            console.log('   - testExpressAPI() - ทดสอบ Express API');
            console.log('   - testEnhancedFeatures() - ทดสอบฟีเจอร์ที่ปรับปรุง');
            
            console.log('✅ Employee Create Form Ready - Express System v2.0 Enhanced');
            console.log('📧 Email Format: firstname.lastnameFirstChar@domain');
            console.log('🔄 Available Domains: @bettersystem.co.th, @better-groups.com');
            console.log('👤 Username Format: firstname (lowercase only)');
            console.log('💻 Computer: Username + Password + Copier Code (On Demand)');
            console.log('⚡ Express v2.0 Enhanced:');
            console.log('   • Username: 1-7 ตัวอักษร (ไม่ต้อง pad)');
            console.log('   • Password: 4 ตัวเลขไม่ซ้ำกัน');
            console.log('   • Dynamic detection via API');
            console.log('🔒 Password Sync: Email = Login (Auto)');
            console.log('📞 Phone: ซ้ำได้');
            console.log('🛡️ Permissions: VPN + Color Printing');
            console.log('🎨 Icons: User, Desktop, Email, Building, Bolt, Shield, Sign-in');
            console.log('🔧 API Endpoint: /api/departments/is-accounting?department_id=X');
            console.log('🎯 Express Detection: Uses express_enabled field from departments table');
            console.log('🚀 All systems ready for employee registration with Express v2.0 Enhanced!');
            
        } catch (error) {
            console.error('❌ Error in initial setup:', error);
        }
    }, 1000);
});

// Modal functions
function submitForm() {
    const form = document.getElementById('employeeForm');
    if (form) {
        form.submit();
    }
}

// ✅ Global Enhanced test functions
window.ExpressSystemEnhanced = {
    testAPI: function(departmentId) {
        fetch(`/api/departments/is-accounting?department_id=${departmentId || 1}`)
            .then(response => response.json())
            .then(data => {
                console.log('🔍 Express API Response:', data);
                return data;
            })
            .catch(error => {
                console.error('❌ Express API Error:', error);
                return error;
            });
    },
    
    showExpress: function() {
        const section = document.getElementById('expressSection');
        if (section) {
            section.style.display = 'block';
            console.log('✅ Express section shown');
        }
    },
    
    hideExpress: function() {
        const section = document.getElementById('expressSection');
        if (section) {
            section.style.display = 'none';
            console.log('✅ Express section hidden');
        }
    },
    
    generateCredentials: function() {
        const firstName = document.getElementById('first_name_en').value || 'john';
        const username = firstName.length <= 7 ? firstName.toLowerCase() : firstName.substring(0, 7).toLowerCase();
        const password = Array.from({length: 4}, () => Math.floor(Math.random() * 10)).filter((v, i, a) => a.indexOf(v) === i).slice(0, 4).join('').padEnd(4, '1234'.split('').find(x => !password.includes(x)) || '0');
        
        document.getElementById('express_username').value = username;
        document.getElementById('express_password').value = password;
        console.log('✅ Enhanced Express credentials generated:', {username, password});
    },
    
    testUniqueNumbers: function() {
        const numbers = [];
        for (let i = 0; i < 10; i++) {
            const num = Array.from({length: 4}, () => {
                const digits = [];
                while (digits.length < 4) {
                    const digit = Math.floor(Math.random() * 10);
                    if (!digits.includes(digit)) {
                        digits.push(digit);
                    }
                }
                return digits.join('');
            })[0];
            numbers.push(num);
        }
        console.log('🔢 Generated unique 4-digit numbers:', numbers);
        return numbers;
    },
    
    info: function() {
        console.log('🚀 Express System v2.0 Enhanced Test Functions:');
        console.log('   ExpressSystemEnhanced.testAPI(departmentId) - ทดสอบ API');
        console.log('   ExpressSystemEnhanced.showExpress() - แสดง Express section');
        console.log('   ExpressSystemEnhanced.hideExpress() - ซ่อน Express section');
        console.log('   ExpressSystemEnhanced.generateCredentials() - สร้าง credentials');
        console.log('   ExpressSystemEnhanced.testUniqueNumbers() - ทดสอบเลขไม่ซ้ำ');
    }
};

// Show enhanced info on load
console.log('📋 พิมพ์ ExpressSystemEnhanced.info() เพื่อดูคำสั่งทดสอบ Enhanced');
</script>
@endpush
