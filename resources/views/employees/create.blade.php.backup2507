@extends('layouts.app')

@section('title', 'เพิ่มพนักงานใหม่')

@section('breadcrumb')
    <li class="breadcrumb-item"><a href="{{ route('employees.index') }}">จัดการพนักงาน</a></li>
    <li class="breadcrumb-item active">เพิ่มพนักงานใหม่</li>
@endsection

@section('content')
<!-- Page Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-0 text-primary fw-bold">
                    <i class="fas fa-user-plus me-2"></i>เพิ่มพนักงานใหม่
                </h1>
                <p class="text-muted mb-0">กรอกข้อมูลพนักงานใหม่เข้าระบบ (รองรับ Express v2.0 Enhanced)</p>
                <div class="mt-2">
                    <span class="badge bg-info">
                        <i class="fas fa-info-circle me-1"></i>
                        Email จะถูกสร้างอัตโนมัติจาก ชื่อ.ตัวแรกนามสกุล@โดเมน
                    </span>
                    <span class="badge bg-warning">
                        <i class="fas fa-bolt me-1"></i>
                        Express จะแสดงเฉพาะแผนกที่เปิดใช้งาน
                    </span>
                    <span class="badge bg-success">
                        <i class="fas fa-sync me-1"></i>
                        รหัสผ่าน Email = Login ระบบ (รหัสเดียวกัน)
                    </span>
                    <span class="badge bg-primary">
                        <i class="fas fa-eye me-1"></i>
                        แสดงรหัสผ่านได้ทั้งหมด
                    </span>
                </div>
            </div>
            <a href="{{ route('employees.index') }}" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>กลับ
            </a>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row text-center g-3">
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-primary w-100 flex-fill d-flex align-items-center justify-content-center" id="generateAllBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-magic me-2"></i>
                            <span class="d-none d-lg-inline">สร้างทั้งหมดอัตโนมัติ</span>
                            <span class="d-lg-none">สร้างทั้งหมด</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">ต้องกรอกชื่อ-นามสกุล EN ก่อน</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-info w-100 flex-fill d-flex align-items-center justify-content-center" id="previewBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-eye me-2"></i>
                            <span>ดูตัวอย่าง</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">ดูก่อนบันทึก</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-warning w-100 flex-fill d-flex align-items-center justify-content-center" id="clearAllBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-trash me-2"></i>
                            <span>ล้างทั้งหมด</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">เริ่มใหม่</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-success w-100 flex-fill d-flex align-items-center justify-content-center" id="generateComputerBtn2" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-desktop me-2"></i>
                            <span class="d-none d-lg-inline">สร้างระบบคอมฯ</span>
                            <span class="d-lg-none">ระบบคอมฯ</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">Username + Password</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Form -->
<form id="employeeForm" action="{{ route('employees.store') }}" method="POST">
    @csrf
    
    <!-- Error Messages -->
    @if ($errors->any())
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <h6 class="fw-bold"><i class="fas fa-exclamation-triangle me-2"></i>กรุณาแก้ไขข้อผิดพลาดต่อไปนี้:</h6>
            <ul class="mb-0">
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    @endif
    
    <!-- ข้อมูลพื้นฐาน -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-primary rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-user text-primary" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ข้อมูลพื้นฐาน</h5>
                    <small class="text-muted">ข้อมูลส่วนตัวและการติดต่อ</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- รหัสพนักงาน -->
                <div class="col-md-6">
                    <label for="employee_code" class="form-label">รหัสพนักงาน</label>
                    <div class="input-group">
                        @php $userRole = auth()->user()->role ?? 'employee'; @endphp
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="กรอกรหัสพนักงาน หรือสร้างอัตโนมัติ">
                        @else
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="สร้างอัตโนมัติ" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="employee_code">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            สามารถกรอกเองหรือสร้างอัตโนมัติ เช่น EMP001
                        @else
                            รหัสจะถูกสร้างอัตโนมัติ เช่น EMP001 (เฉพาะ Admin แก้ไขได้)
                        @endif
                    </div>
                    @error('employee_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ID Keycard -->
                <div class="col-md-6">
                    <label for="keycard_id" class="form-label">ID Keycard</label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="กรอก ID Keycard หรือสร้างอัตโนมัติ">
                        @else
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="สร้างอัตโนมัติ" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="keycard_id">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            สามารถกรอกเองหรือสร้างอัตโนมัติ เช่น KC123456
                        @else
                            รหัสบัตรจะถูกสร้างอัตโนมัติ เช่น KC123456 (เฉพาะ Admin แก้ไขได้)
                        @endif
                    </div>
                    @error('keycard_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อภาษาไทย -->
                <div class="col-md-6">
                    <label for="first_name_th" class="form-label">
                        ชื่อภาษาไทย <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_th') is-invalid @enderror" 
                           id="first_name_th" name="first_name_th" value="{{ old('first_name_th') }}" 
                           placeholder="กรอกชื่อภาษาไทย" required>
                    @error('first_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- นามสกุลภาษาไทย -->
                <div class="col-md-6">
                    <label for="last_name_th" class="form-label">
                        นามสกุลภาษาไทย <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_th') is-invalid @enderror" 
                           id="last_name_th" name="last_name_th" value="{{ old('last_name_th') }}" 
                           placeholder="กรอกนามสกุลภาษาไทย" required>
                    @error('last_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อภาษาอังกฤษ -->
                <div class="col-md-6">
                    <label for="first_name_en" class="form-label">
                        ชื่อภาษาอังกฤษ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_en') is-invalid @enderror" 
                           id="first_name_en" name="first_name_en" value="{{ old('first_name_en') }}" 
                           placeholder="First Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ใช้เฉพาะตัวอักษร A-Z เท่านั้น (สำหรับสร้าง Username และ Express)
                        </small>
                    </div>
                    @error('first_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- นามสกุลภาษาอังกฤษ -->
                <div class="col-md-6">
                    <label for="last_name_en" class="form-label">
                        นามสกุลภาษาอังกฤษ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_en') is-invalid @enderror" 
                           id="last_name_en" name="last_name_en" value="{{ old('last_name_en') }}" 
                           placeholder="Last Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ใช้เฉพาะตัวอักษร A-Z เท่านั้น (สำหรับสร้าง Username และ Email)
                        </small>
                    </div>
                    @error('last_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- เบอร์โทร (อนุญาติซ้ำได้) -->
                <div class="col-md-6">
                    <label for="phone" class="form-label">
                        เบอร์โทรศัพท์ <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">อนุญาติซ้ำได้</span>
                    </label>
                    <input type="tel" class="form-control @error('phone') is-invalid @enderror" 
                           id="phone" name="phone" value="{{ old('phone') }}" 
                           placeholder="08x-xxx-xxxx" required>
                    <div class="form-text">
                        <small class="text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            สามารถใช้เบอร์โทรที่ซ้ำกันได้ (ครอบครัว/เพื่อนร่วมงาน)
                        </small>
                    </div>
                    @error('phone')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ชื่อเล่น -->
                <div class="col-md-6">
                    <label for="nickname" class="form-label">ชื่อเล่น</label>
                    <input type="text" class="form-control @error('nickname') is-invalid @enderror" 
                           id="nickname" name="nickname" value="{{ old('nickname') }}" 
                           placeholder="กรอกชื่อเล่น">
                    @error('nickname')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ระบบคอมพิวเตอร์ -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-success rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-desktop text-success" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ระบบคอมพิวเตอร์</h5>
                    <small class="text-muted">Username และรหัสผ่านสำหรับคอมพิวเตอร์</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="generateComputerBtn">
                <i class="fas fa-desktop me-1"></i>สร้างระบบคอมฯ
            </button>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Username -->
                <div class="col-md-6">
                    <label for="username" class="form-label">
                        Username (เปิดคอมพิวเตอร์) <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('username') is-invalid @enderror" 
                               id="username" 
                               name="username" 
                               value="{{ old('username') }}"
                               placeholder="จะสร้างจากชื่อ EN"
                               required>
                        <button type="button" class="btn btn-outline-primary" data-target="username">
                            <i class="fas fa-user"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        รูปแบบ: <strong>ชื่อ</strong> ภาษาอังกฤษตัวเล็ก (เช่น john)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                Username นี้จะใช้เป็นฐานในการสร้าง Email
                            </small>
                        </div>
                    </div>
                    @error('username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Computer Password (แสดงได้ทั้งหมด) -->
                <div class="col-md-6">
                    <label for="computer_password" class="form-label">
                        Password (เปิดคอมพิวเตอร์)
                        <span class="badge bg-primary ms-2">แสดงได้</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('computer_password') is-invalid @enderror" 
                               id="computer_password" 
                               name="computer_password" 
                               value="{{ old('computer_password') }}"
                               placeholder="Random 10 ตัวอักษร">
                        <button type="button" class="btn btn-outline-primary" data-target="computer_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="computer_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        รหัสผ่านสำหรับเปิดคอมพิวเตอร์ 
                        <span class="text-success">(แสดงให้เห็นได้ทั้งหมด)</span>
                    </div>
                    @error('computer_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Copier Code (On Demand) -->
                <div class="col-md-6">
                    <label for="copier_code" class="form-label">
                        รหัสเครื่องถ่ายเอกสาร
                        <span class="badge bg-info ms-2">On Demand</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('copier_code') is-invalid @enderror" 
                               id="copier_code" 
                               name="copier_code" 
                               value="{{ old('copier_code') }}"
                               placeholder="กดปุ่มเพื่อสร้าง" 
                               maxlength="4">
                        <button type="button" class="btn btn-outline-primary" data-target="copier_code">
                            <i class="fas fa-print"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-mouse-pointer me-1"></i>
                            รหัส 4 หลักตัวเลข - กดปุ่มเมื่อต้องการสร้าง
                        </small>
                    </div>
                    @error('copier_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ระบบอีเมลและ Login (รวมกัน - รหัสผ่านชุดเดียวกัน) -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-info rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-envelope text-info" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">ระบบอีเมลและ Login</h5>
                    <small class="text-muted">อีเมลและรหัสผ่านสำหรับระบบอีเมลและเข้าสู่ระบบ (รหัสเดียวกัน)</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-success">
                <i class="fas fa-sync me-2"></i>
                <strong>ปรับปรุงแล้ว:</strong> รหัสผ่าน Email และ Login ใช้รหัสเดียวกันอัตโนมัติ (ไม่ต้องจำหลายรหัส) และแสดงให้เห็นได้ทั้งหมด
            </div>
            
            <div class="row g-3">
                <!-- Email -->
                <div class="col-md-8">
                    <label for="email" class="form-label">
                        อีเมล <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="email" 
                               class="form-control @error('email') is-invalid @enderror" 
                               id="email" 
                               name="email" 
                               value="{{ old('email') }}"
                               placeholder="จะสร้างจากชื่อ.ตัวแรกนามสกุล"
                               required>
                        <select class="form-select" id="email_domain" style="max-width: 220px;">
                            <option value="bettersystem.co.th">@bettersystem.co.th</option>
                            <option value="better-groups.com">@better-groups.com</option>
                        </select>
                        <button type="button" class="btn btn-outline-primary" data-target="email">
                            <i class="fas fa-envelope"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        รูปแบบ: <strong>ชื่อ.ตัวแรกของนามสกุล@โดเมน</strong>
                        <div id="emailPreview" class="mt-2" style="display: none;">
                            <span class="text-success">ตัวอย่าง: </span>
                            <code class="text-primary" id="emailPreviewText"></code>
                        </div>
                        <div class="mt-2">
                            <small class="text-success">
                                <i class="fas fa-link me-1"></i>
                                Email นี้จะถูกใช้เป็น Login Email ด้วย (ใช้รหัสผ่านชุดเดียวกัน)
                            </small>
                        </div>
                    </div>
                    @error('email')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Unified Password (Email + Login) -->
                <div class="col-md-4">
                    <label for="unified_password" class="form-label">
                        Password (Email + Login) <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">Unified</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('unified_password') is-invalid @enderror" 
                               id="unified_password" 
                               name="unified_password" 
                               value="{{ old('unified_password') }}"
                               placeholder="Random 10 ตัวอักษร"
                               required>
                        <button type="button" class="btn btn-outline-primary" data-target="unified_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="unified_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <span class="text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            รหัสผ่านเดียวสำหรับ Email และ Login ระบบ (แสดงได้ทั้งหมด)
                        </span>
                    </div>
                    @error('unified_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Hidden fields for backend compatibility -->
                <input type="hidden" id="email_password" name="email_password" value="{{ old('email_password') }}">
                <input type="hidden" id="password" name="password" value="{{ old('password') }}">
                <input type="hidden" id="login_email" name="login_email" value="{{ old('login_email') }}">
            </div>
        </div>
    </div>

    <!-- แผนกและสิทธิ์ -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-warning rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-building text-warning" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">แผนกและสิทธิ์</h5>
                    <small class="text-muted">แผนกการทำงานและสิทธิ์การใช้งาน</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Department -->
                <div class="col-md-6">
                    <label for="department_id" class="form-label">
                        แผนกการทำงาน <span class="text-danger">*</span>
                        <span class="badge bg-warning text-dark ms-2" id="expressIndicator" style="display: none;">
                            <i class="fas fa-bolt me-1"></i>Express Ready
                        </span>
                    </label>
                    <select class="form-select @error('department_id') is-invalid @enderror" 
                            id="department_id" 
                            name="department_id" 
                            required>
                        <option value="">เลือกแผนก</option>
                        @php
                            // ใช้ departments ที่ส่งมาจาก controller หรือ fallback
                            if (isset($departments) && is_object($departments)) {
                                $deptCollection = $departments;
                            } elseif (isset($departments) && is_array($departments)) {
                                $deptCollection = collect($departments);
                            } else {
                                // Fallback departments
                                $deptCollection = collect([
                                    (object)['id' => 1, 'name' => 'บัญชี', 'express_enabled' => true],
                                    (object)['id' => 2, 'name' => 'IT', 'express_enabled' => false],
                                    (object)['id' => 3, 'name' => 'ฝ่ายขาย', 'express_enabled' => false],
                                    (object)['id' => 4, 'name' => 'การตลาด', 'express_enabled' => false],
                                    (object)['id' => 5, 'name' => 'บุคคล', 'express_enabled' => false],
                                    (object)['id' => 6, 'name' => 'ผลิต', 'express_enabled' => false],
                                    (object)['id' => 7, 'name' => 'คลังสินค้า', 'express_enabled' => false],
                                    (object)['id' => 8, 'name' => 'บริหาร', 'express_enabled' => false],
                                ]);
                            }
                        @endphp
                        
                        @if($userRole === 'express')
                            @foreach($deptCollection->where('express_enabled', true) as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @else
                            @foreach($deptCollection as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @endif
                    </select>
                    @error('department_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                    @if($userRole === 'express')
                        <div class="form-text text-info">Express: สามารถเลือกเฉพาะแผนกที่รองรับ Express</div>
                    @elseif($userRole === 'super_admin')
                        <div class="form-text text-success">
                            <i class="fas fa-plus-circle me-1"></i>
                            SuperAdmin: สามารถจัดการ Express ของแผนกได้ใน
                            <a href="{{ route('departments.index') }}" target="_blank">หน้าจัดการแผนก</a>
                        </div>
                    @endif
                </div>

                <!-- Position -->
                <div class="col-md-6">
                    <label for="position" class="form-label">
                        ตำแหน่ง <span class="text-danger">*</span>
                    </label>
                    <input type="text" 
                           class="form-control @error('position') is-invalid @enderror" 
                           id="position" 
                           name="position" 
                           value="{{ old('position') }}"
                           placeholder="เช่น Developer, Accountant"
                           required>
                    @error('position')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Role -->
                <div class="col-md-6">
                    <label for="role" class="form-label">
                        สิทธิ์การใช้งาน <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('role') is-invalid @enderror" 
                            id="role" 
                            name="role" 
                            required>
                        <option value="">เลือกสิทธิ์</option>
                        <option value="employee" {{ old('role') == 'employee' ? 'selected' : '' }}>พนักงานทั่วไป (Employee)</option>
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <option value="hr" {{ old('role') == 'hr' ? 'selected' : '' }}>ฝ่ายบุคคล (HR)</option>
                            <option value="manager" {{ old('role') == 'manager' ? 'selected' : '' }}>ผู้จัดการ (Manager)</option>
                            <option value="express" {{ old('role') == 'express' ? 'selected' : '' }}>Express User</option>
                            @if($userRole === 'super_admin')
                                <option value="it_admin" {{ old('role') == 'it_admin' ? 'selected' : '' }}>IT Admin</option>
                            @endif
                        @endif
                    </select>
                    @error('role')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Status -->
                <div class="col-md-6">
                    <label for="status" class="form-label">
                        สถานะ <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('status') is-invalid @enderror" 
                            id="status" 
                            name="status" 
                            required>
                        <option value="active" {{ old('status') == 'active' ? 'selected' : '' }}>ใช้งาน (Active)</option>
                        <option value="inactive" {{ old('status') == 'inactive' ? 'selected' : '' }}>ไม่ใช้งาน (Inactive)</option>
                    </select>
                    @error('status')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- โปรแกรม Express (Dynamic v2.0 Enhanced) -->
    <div class="card mb-4" id="expressSection" style="display: none;">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-danger rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-bolt text-danger" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">
                        โปรแกรม Express v2.0
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </h5>
                    <small class="text-muted">รองรับแผนกที่เปิดใช้งาน Express - ปรับแต่งใหม่</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-warning" id="generateExpressBtn">
                <i class="fas fa-bolt me-1"></i>สร้าง Express
            </button>
        </div>
        <div class="card-body">
            <div class="alert alert-success" role="alert">
                <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle me-2"></i>
                    <div>
                        <strong>Express v2.0 Enhanced:</strong> ระบบได้รับการปรับปรุง
                        <div class="mt-2">
                            <span class="badge bg-success me-1">
                                <i class="fas fa-user me-1"></i>Username: 1-7 ตัวอักษร
                            </span>
                            <span class="badge bg-info me-1">
                                <i class="fas fa-lock me-1"></i>Password: 4 ตัวเลข (ไม่ซ้ำ)
                            </span>
                            <span class="badge bg-primary me-1">
                                <i class="fas fa-eye me-1"></i>แสดงได้ทั้งหมด
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row g-3">
                <!-- Express Username (Enhanced: 1-7 ตัวอักษร) -->
                <div class="col-md-6">
                    <label for="express_username" class="form-label">
                        Username Express (1-7 ตัวอักษร)
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('express_username') is-invalid @enderror" 
                               id="express_username" 
                               name="express_username" 
                               value="{{ old('express_username') }}"
                               placeholder="จะสร้างจากชื่อ EN (1-7 ตัว)" 
                               maxlength="7">
                        <button type="button" class="btn btn-outline-primary" data-target="express_username">
                            <i class="fas fa-bolt"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <strong class="text-success">ปรับปรุงใหม่:</strong> ใช้ชื่อภาษาอังกฤษได้ 1-7 ตัวอักษร (ไม่ต้อง pad)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                ตัวอย่าง: "John" → "john", "Alexandra" → "alexand"
                            </small>
                        </div>
                    </div>
                    @error('express_username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Express Password (Enhanced: 4 ตัวเลขไม่ซ้ำ) -->
                <div class="col-md-6">
                    <label for="express_password" class="form-label">
                        Password โปรแกรม Express
                        <span class="badge bg-success ms-2">Numbers Only</span>
                        <span class="badge bg-primary ms-2">แสดงได้</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('express_password') is-invalid @enderror" 
                               id="express_password" 
                               name="express_password" 
                               value="{{ old('express_password') }}"
                               placeholder="4 ตัวเลขไม่ซ้ำ" 
                               maxlength="4"
                               pattern="[0-9]{4}">
                        <button type="button" class="btn btn-outline-primary" data-target="express_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="express_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <strong class="text-success">ปรับปรุงใหม่:</strong> 4 ตัวเลขที่ไม่ซ้ำกัน (เช่น 1234, 5678) 
                        <span class="text-success">(แสดงให้เห็นได้ทั้งหมด)</span>
                        <div class="mt-1">
                            <small class="text-info">
                                <i class="fas fa-calculator me-1"></i>
                                ตัวอย่าง: 1357, 2468, 1029 (ไม่ซ้ำเลข)
                            </small>
                        </div>
                    </div>
                    @error('express_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- สิทธิ์พิเศษ -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-shield-alt text-secondary" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">สิทธิ์พิเศษ</h5>
                    <small class="text-muted">การอนุญาตใช้งานเพิ่มเติม</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- VPN Permission -->
                <div class="col-md-6">
                    <div class="card border-primary">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-shield-alt text-primary fa-2x"></i>
                            </div>
                            <h6 class="card-title">การใช้งาน VPN</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="vpn_access" 
                                       name="vpn_access" 
                                       value="1"
                                       {{ old('vpn_access') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="vpn_access">
                                    <span id="vpnStatus">{{ old('vpn_access') ? 'อนุญาต' : 'ไม่อนุญาต' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                อนุญาตให้เชื่อมต่อ VPN เพื่อทำงานจากที่บ้าน
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Color Printing Permission -->
                <div class="col-md-6">
                    <div class="card border-warning">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-palette text-warning fa-2x"></i>
                            </div>
                            <h6 class="card-title">การปริ้นสี</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="color_printing" 
                                       name="color_printing" 
                                       value="1"
                                       {{ old('color_printing') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="color_printing">
                                    <span id="printingStatus">{{ old('color_printing') ? 'อนุญาต' : 'ไม่อนุญาต' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                อนุญาตให้ใช้เครื่องพิมพ์สีในการพิมพ์เอกสาร
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row mt-3">
                <div class="col-12">
                    <div class="alert alert-info mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>หมายเหตุ:</strong> สิทธิ์พิเศษเหล่านี้สามารถปรับเปลี่ยนได้ภายหลังโดย Admin
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Actions -->
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <a href="{{ route('employees.index') }}" 
                   class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>ยกเลิก
                </a>
                
                <button type="submit" 
                        class="btn btn-primary"
                        id="submitBtn">
                    <i class="fas fa-plus me-2"></i>สร้างพนักงาน
                </button>
            </div>
        </div>
    </div>
</form>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">
                    <i class="fas fa-eye me-2"></i>ตัวอย่างข้อมูลพนักงาน (Final Fixed Version)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Preview content will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ปิด</button>
                <button type="button" class="btn btn-primary" onclick="submitForm()">
                    ยืนยันและบันทึก
                </button>
            </div>
        </div>
    </div>
</div>

@endsection

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 Employee Create Form Loaded - Final Fixed Version Ready');
    
    // Utility Functions
    const utils = {
        showLoading: (button) => {
            button.disabled = true;
            const originalText = button.innerHTML;
            button.dataset.originalText = originalText;
            button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>กำลังสร้าง...';
        },
        
        hideLoading: (button) => {
            button.disabled = false;
            if (button.dataset.originalText) {
                button.innerHTML = button.dataset.originalText;
            }
        },
        
        generateRandomString: (length, includeNumbers = true) => {
            const chars = includeNumbers ? 
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' :
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        },
        
        generateRandomNumber: (length) => {
            let result = '';
            for (let i = 0; i < length; i++) {
                result += Math.floor(Math.random() * 10);
            }
            return result;
        },
        
        // Enhanced: สร้างเลข 4 หลักไม่ซ้ำกัน
        generateUniqueNumbers: (length = 4) => {
            const digits = [];
            while (digits.length < length) {
                const digit = Math.floor(Math.random() * 10);
                if (!digits.includes(digit)) {
                    digits.push(digit);
                }
            }
            return digits.join('');
        },
        
        showNotification: (message, type = 'success') => {
            const alertClass = type === 'success' ? 'alert-success' : 
                              type === 'error' ? 'alert-danger' : 
                              type === 'warning' ? 'alert-warning' : 'alert-info';
            const iconClass = type === 'success' ? 'fa-check-circle' : 
                             type === 'error' ? 'fa-exclamation-triangle' :
                             type === 'warning' ? 'fa-exclamation-circle' : 'fa-info-circle';
            const alert = document.createElement('div');
            alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';
            alert.innerHTML = `
                <i class="fas ${iconClass} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }
    };
    
    // Enhanced Generator Functions
    const generators = {
        employeeCode: () => `EMP${utils.generateRandomNumber(3)}`,
        keycardId: () => `KC${utils.generateRandomNumber(6)}`,
        username: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && englishRegex.test(firstName)) {
                return firstName.toLowerCase();
            }
            return '';
        },
        email: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName && domain && englishRegex.test(firstName) && englishRegex.test(lastName)) {
                return `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
            }
            return '';
        },
        password: () => utils.generateRandomString(10, true),
        copierCode: () => utils.generateRandomNumber(4),
        
        // Enhanced Express Username: 1-7 ตัวอักษร
        expressUsername: () => {
            const firstName = document.getElementById('first_name_en').value.trim().toLowerCase();
            if (firstName.length > 0) {
                return firstName.length <= 7 ? firstName : firstName.substring(0, 7);
            }
            return utils.generateRandomString(5, false).toLowerCase();
        },
        
        // Enhanced Express Password: 4 ตัวเลขไม่ซ้ำกัน
        expressPassword: () => utils.generateUniqueNumbers(4)
    };
    
    // Auto-generation functions
    const autoGenerate = {
        username: () => {
            const username = generators.username();
            if (username) {
                document.getElementById('username').value = username;
                
                // Add animation
                const usernameInput = document.getElementById('username');
                usernameInput.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                usernameInput.style.transform = 'scale(1.02)';
                usernameInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    usernameInput.style.background = '';
                    usernameInput.style.transform = '';
                }, 1500);
                
                console.log('✅ Username generated:', username);
            }
        },
        
        email: () => {
            const email = generators.email();
            if (email) {
                document.getElementById('email').value = email;
                // Auto-sync with hidden login_email field
                document.getElementById('login_email').value = email;
                autoGenerate.showEmailPreview();
                
                // Add animation
                const emailInput = document.getElementById('email');
                emailInput.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                emailInput.style.transform = 'scale(1.02)';
                emailInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    emailInput.style.background = '';
                    emailInput.style.transform = '';
                }, 1500);
                
                console.log('✅ Email generated:', email);
            }
        },
        
        // NEW: Unified password generation and sync
        unifiedPassword: () => {
            const password = generators.password();
            if (password) {
                // Set unified password field
                document.getElementById('unified_password').value = password;
                
                // Auto-sync with hidden fields for backend compatibility
                document.getElementById('email_password').value = password;
                document.getElementById('password').value = password;
                
                // Add animation
                const passwordInput = document.getElementById('unified_password');
                passwordInput.style.background = 'linear-gradient(45deg, #e8f5e8, #fff3e0)';
                passwordInput.style.transform = 'scale(1.02)';
                passwordInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    passwordInput.style.background = '';
                    passwordInput.style.transform = '';
                }, 1500);
                
                console.log('✅ Unified password generated and synced:', password);
                return password;
            }
        },
        
        showEmailPreview: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const previewDiv = document.getElementById('emailPreview');
            const previewText = document.getElementById('emailPreviewText');
            
            if (!previewDiv || !previewText) return;
            
            // Validate English characters
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName) {
                if (englishRegex.test(firstName) && englishRegex.test(lastName)) {
                    const emailPreview = `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
                    previewText.textContent = emailPreview;
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-success';
                } else {
                    previewText.textContent = 'กรุณากรอกชื่อ-นามสกุลภาษาอังกฤษเท่านั้น';
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-warning';
                }
            } else {
                previewDiv.style.display = 'none';
            }
        }
    };
    
    // Event Handlers
    const eventHandlers = {
        handleMagicClick: async (event) => {
            const button = event.target.closest('[data-target]');
            if (!button) return;
            
            const target = button.dataset.target;
            const targetElement = document.getElementById(target);
            if (!targetElement) return;
            
            utils.showLoading(button);
            
            try {
                let value = '';
                
                switch (target) {
                    case 'employee_code':
                        value = generators.employeeCode();
                        break;
                    case 'keycard_id':
                        value = generators.keycardId();
                        break;
                    case 'username':
                        value = generators.username();
                        break;
                    case 'email':
                        value = generators.email();
                        break;
                    case 'computer_password':
                        value = generators.password();
                        break;
                    case 'unified_password':
                        // Use unified password generation
                        autoGenerate.unifiedPassword();
                        utils.showNotification('✅ สร้างรหัสผ่านรวม (Email + Login) สำเร็จ!', 'success');
                        utils.hideLoading(button);
                        return;
                    case 'copier_code':
                        value = generators.copierCode();
                        break;
                    case 'express_username':
                        value = generators.expressUsername();
                        break;
                    case 'express_password':
                        value = generators.expressPassword();
                        break;
                }
                
                if (value) {
                    targetElement.value = value;
                    
                    if (target === 'email') {
                        // Sync with login_email
                        const loginEmail = document.getElementById('login_email');
                        if (loginEmail) loginEmail.value = value;
                        autoGenerate.showEmailPreview();
                    }
                    
                    // Show different messages based on target
                    let message = '';
                    switch (target) {
                        case 'email':
                            message = `✅ สร้าง Email สำเร็จ: ${value}`;
                            break;
                        case 'username':
                            message = `✅ สร้าง Username สำเร็จ: ${value}`;
                            break;
                        case 'employee_code':
                            message = `✅ สร้างรหัสพนักงานสำเร็จ: ${value}`;
                            break;
                        case 'keycard_id':
                            message = `✅ สร้าง ID Keycard สำเร็จ: ${value}`;
                            break;
                        case 'express_username':
                            message = `✅ สร้าง Express Username สำเร็จ: ${value} (${value.length} ตัวอักษร)`;
                            break;
                        case 'express_password':
                            message = `✅ สร้างรหัส Express สำเร็จ: ${value} (4 ตัวเลขไม่ซ้ำ)`;
                            break;
                        case 'copier_code':
                            message = `✅ สร้างรหัสถ่ายเอกสารสำเร็จ: ${value}`;
                            break;
                        default:
                            message = `✅ สร้าง ${target} สำเร็จ: ${value}`;
                    }
                    
                    utils.showNotification(message);
                }
                
            } catch (error) {
                console.error(`Error generating ${target}:`, error);
                utils.showNotification(`❌ เกิดข้อผิดพลาดในการสร้าง ${target}`, 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        handlePasswordToggle: (event) => {
            const button = event.target.closest('[data-toggle-password]');
            if (!button) return;
            
            const target = button.dataset.togglePassword;
            const targetElement = document.getElementById(target);
            
            if (targetElement) {
                if (targetElement.type === 'password') {
                    targetElement.type = 'text';
                    button.innerHTML = '<i class="fas fa-eye-slash"></i>';
                } else {
                    targetElement.type = 'password';
                    button.innerHTML = '<i class="fas fa-eye"></i>';
                }
            }
        },
        
        // Department Change Handler - Express v2.0
        handleDepartmentChange: () => {
            const departmentSelect = document.getElementById('department_id');
            const expressSection = document.getElementById('expressSection');
            const expressIndicator = document.getElementById('expressIndicator');
            
            if (!departmentSelect || !expressSection) {
                console.log('❌ Department select or express section not found');
                return;
            }
            
            const departmentId = departmentSelect.value;
            
            if (!departmentId) {
                expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                return;
            }
            
            console.log('🏢 Department selected ID:', departmentId);
            
            // ใช้ API ที่ตรวจสอบ express_enabled
            fetch(`/api/departments/is-accounting?department_id=${departmentId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.is_express_enabled) {
                        expressSection.style.display = 'block';
                        if (expressIndicator) expressIndicator.style.display = 'inline-block';
                        
                        // Auto-generate Express fields if name is available
                        const firstName = document.getElementById('first_name_en').value.trim();
                        if (firstName) {
                            const expressUsernameEl = document.getElementById('express_username');
                            const expressPasswordEl = document.getElementById('express_password');
                            
                            if (expressUsernameEl && !expressUsernameEl.value) {
                                expressUsernameEl.value = generators.expressUsername();
                            }
                            if (expressPasswordEl && !expressPasswordEl.value) {
                                expressPasswordEl.value = generators.expressPassword();
                            }
                        }
                        
                        utils.showNotification(`⚡ ${data.department_name}: เปิดใช้งาน Express แล้ว`, 'success');
                        console.log('✅ Express enabled for department:', data.department_name);
                    } else {
                        expressSection.style.display = 'none';
                        if (expressIndicator) expressIndicator.style.display = 'none';
                        
                        // Clear Express fields
                        const expressUsernameEl = document.getElementById('express_username');
                        const expressPasswordEl = document.getElementById('express_password');
                        
                        if (expressUsernameEl) expressUsernameEl.value = '';
                        if (expressPasswordEl) expressPasswordEl.value = '';
                        
                        if (data.department_name) {
                            console.log('🏢 Department changed to:', data.department_name, '- Express not enabled');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error checking Express eligibility:', error);
                    expressSection.style.display = 'none';
                    if (expressIndicator) expressIndicator.style.display = 'none';
                });
        },
        
        handleInputValidation: (event) => {
            const input = event.target;
            const englishRegex = /^[a-zA-Z\s]*$/;
            
            if (input.id === 'first_name_en' || input.id === 'last_name_en') {
                if (!englishRegex.test(input.value)) {
                    input.style.borderColor = '#dc3545';
                    input.style.boxShadow = '0 0 0 0.2rem rgba(220, 53, 69, 0.25)';
                    
                    // Show warning
                    let warningDiv = input.parentElement.querySelector('.english-warning');
                    if (!warningDiv) {
                        warningDiv = document.createElement('div');
                        warningDiv.className = 'english-warning mt-1 text-danger';
                        warningDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>กรุณากรอกเฉพาะตัวอักษร A-Z เท่านั้น';
                        input.parentElement.appendChild(warningDiv);
                    }
                    
                    // Remove non-English characters
                    input.value = input.value.replace(/[^a-zA-Z\s]/g, '');
                } else {
                    input.style.borderColor = '';
                    input.style.boxShadow = '';
                    
                    // Remove warning
                    const warningDiv = input.parentElement.querySelector('.english-warning');
                    if (warningDiv) {
                        warningDiv.remove();
                    }
                }
            }
        },
        
        handlePhoneFormat: (event) => {
            let value = event.target.value.replace(/\D/g, '');
            if (value.length >= 3 && value.length <= 6) {
                value = value.slice(0, 3) + '-' + value.slice(3);
            } else if (value.length > 6) {
                value = value.slice(0, 3) + '-' + value.slice(3, 6) + '-' + value.slice(6, 10);
            }
            event.target.value = value;
        },
        
        // Handle Special Permission Switches
        handlePermissionSwitches: () => {
            const vpnSwitch = document.getElementById('vpn_access');
            const printingSwitch = document.getElementById('color_printing');
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnSwitch && vpnStatus) {
                vpnSwitch.addEventListener('change', function() {
                    vpnStatus.textContent = this.checked ? 'อนุญาต' : 'ไม่อนุญาต';
                    vpnStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
            
            if (printingSwitch && printingStatus) {
                printingSwitch.addEventListener('change', function() {
                    printingStatus.textContent = this.checked ? 'อนุญาต' : 'ไม่อนุญาต';
                    printingStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
        }
    };
    
    // Form Actions
    const formActions = {
        generateAll: async () => {
            const button = document.getElementById('generateAllBtn');
            utils.showLoading(button);
            
            try {
                console.log('🎯 Starting generateAll Final Fixed...');
                
                // Generate basic codes
                document.getElementById('employee_code').value = generators.employeeCode();
                document.getElementById('keycard_id').value = generators.keycardId();
                
                // Username และ Email generation
                if (document.getElementById('first_name_en').value) {
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                } else {
                    utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน จึงจะสร้าง Username และ Email ได้', 'error');
                    return;
                }
                
                // Generate passwords
                document.getElementById('computer_password').value = generators.password();
                
                // NEW: Generate unified password (Email + Login)
                autoGenerate.unifiedPassword();
                
                // Express fields (ถ้าแสดงอยู่)
                const expressSection = document.getElementById('expressSection');
                if (expressSection && expressSection.style.display !== 'none') {
                    document.getElementById('express_username').value = generators.expressUsername();
                    document.getElementById('express_password').value = generators.expressPassword();
                }
                
                utils.showNotification('🎉 สร้างข้อมูลทั้งหมดสำเร็จ! (Final Fixed Version)', 'success');
                
            } catch (error) {
                console.error('Error in generateAll:', error);
                utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        clearAll: () => {
            if (confirm('ต้องการล้างข้อมูลทั้งหมดหรือไม่?')) {
                document.getElementById('employeeForm').reset();
                
                const emailPreview = document.getElementById('emailPreview');
                const expressSection = document.getElementById('expressSection');
                const expressIndicator = document.getElementById('expressIndicator');
                const vpnStatus = document.getElementById('vpnStatus');
                const printingStatus = document.getElementById('printingStatus');
                
                if (emailPreview) emailPreview.style.display = 'none';
                if (expressSection) expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                if (vpnStatus) vpnStatus.textContent = 'ไม่อนุญาต';
                if (printingStatus) printingStatus.textContent = 'ไม่อนุญาต';
                
                // Re-generate initial codes (ยกเว้น copier code)
                setTimeout(() => {
                    document.getElementById('employee_code').value = generators.employeeCode();
                    document.getElementById('keycard_id').value = generators.keycardId();
                }, 100);
                
                utils.showNotification('🗑️ ล้างข้อมูลทั้งหมดแล้ว', 'success');
            }
        },
        
        showPreview: () => {
            const formData = new FormData(document.getElementById('employeeForm'));
            const data = {};
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }
            
            const previewContent = document.getElementById('previewContent');
            if (!previewContent) return;
            
            // Get select values with text
            const departmentSelect = document.getElementById('department_id');
            const departmentName = departmentSelect && departmentSelect.selectedIndex > 0 ? 
                departmentSelect.options[departmentSelect.selectedIndex].textContent.trim() : '-';
                
            const roleSelect = document.getElementById('role');
            const roleName = roleSelect && roleSelect.selectedIndex > 0 ? 
                roleSelect.options[roleSelect.selectedIndex].textContent.trim() : '-';
                
            const statusSelect = document.getElementById('status');
            const statusName = statusSelect && statusSelect.selectedIndex > 0 ? 
                statusSelect.options[statusSelect.selectedIndex].textContent.trim() : '-';
            
            const emailDomain = document.getElementById('email_domain').value;
            
            // Check if Express data exists
            const expressSection = document.getElementById('expressSection');
            const isExpressVisible = expressSection && expressSection.style.display !== 'none';
            
            // Get special permissions
            const vpnAccess = document.getElementById('vpn_access').checked;
            const colorPrinting = document.getElementById('color_printing').checked;
            
            // Get unified password
            const unifiedPassword = document.getElementById('unified_password').value;
            
            previewContent.innerHTML = `
                <div class="row">
                    <!-- ข้อมูลพื้นฐาน -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h6 class="mb-0"><i class="fas fa-user me-2"></i>ข้อมูลพื้นฐาน</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>รหัสพนักงาน:</strong></td><td><span class="badge bg-secondary">${data.employee_code || '-'}</span></td></tr>
                                    <tr><td><strong>ID Keycard:</strong></td><td><span class="badge bg-info">${data.keycard_id || '-'}</span></td></tr>
                                    <tr><td><strong>ชื่อ-นามสกุล (ไทย):</strong></td><td class="fw-bold text-primary">${data.first_name_th || '-'} ${data.last_name_th || '-'}</td></tr>
                                    <tr><td><strong>ชื่อ-นามสกุล (อังกฤษ):</strong></td><td class="fw-bold">${data.first_name_en || '-'} ${data.last_name_en || '-'}</td></tr>
                                    <tr><td><strong>เบอร์โทร:</strong></td><td>${data.phone || '-'} <span class="badge bg-success">ซ้ำได้</span></td></tr>
                                    <tr><td><strong>ชื่อเล่น:</strong></td><td>${data.nickname ? `<span class="badge bg-light text-dark">"${data.nickname}"</span>` : '-'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ระบบคอมพิวเตอร์ -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0"><i class="fas fa-desktop me-2"></i>ระบบคอมพิวเตอร์</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Username:</strong></td><td><span class="badge bg-primary">${data.username || '-'}</span></td></tr>
                                    <tr><td><strong>Password คอมพิวเตอร์:</strong></td><td><code class="text-success">${data.computer_password || '-'}</code></td></tr>
                                    <tr><td><strong>รหัสถ่ายเอกสาร:</strong></td><td>${data.copier_code ? `<span class="badge bg-warning text-dark">${data.copier_code}</span>` : '<span class="text-muted">ยังไม่สร้าง (On Demand)</span>'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ระบบอีเมลและ Login (รวมกัน) -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-envelope me-2"></i>ระบบอีเมลและ Login</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>อีเมล:</strong></td><td class="fw-bold text-success">${data.email || '-'}</td></tr>
                                    <tr><td><strong>โดเมน:</strong></td><td><span class="badge bg-info">@${emailDomain}</span></td></tr>
                                    <tr><td><strong>Password รวม:</strong></td><td><code class="text-success">${unifiedPassword || '-'}</code></td></tr>
                                    <tr><td><strong>การใช้งาน:</strong></td><td><small class="text-success">อีเมล + Login ใช้รหัสเดียวกัน</small></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-check-circle me-1"></i>
                                    <small><strong>Fixed:</strong> รหัสผ่านเดียวกันสำหรับ Email และ Login + แสดงได้ทั้งหมด</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- แผนกและสิทธิ์ -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0"><i class="fas fa-building me-2"></i>แผนกและสิทธิ์</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>แผนก:</strong></td><td><span class="badge bg-info">${departmentName}</span></td></tr>
                                    <tr><td><strong>ตำแหน่ง:</strong></td><td class="fw-bold">${data.position || '-'}</td></tr>
                                    <tr><td><strong>บทบาท:</strong></td><td><span class="badge bg-secondary">${roleName}</span></td></tr>
                                    <tr><td><strong>สถานะ:</strong></td><td><span class="badge bg-${data.status === 'active' ? 'success' : 'danger'}">${statusName}</span></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    ${isExpressVisible ? `
                    <!-- โปรแกรม Express v2.0 Enhanced -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-danger">
                            <div class="card-header bg-danger text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-bolt me-2"></i>โปรแกรม Express v2.0
                                    <span class="badge bg-dark text-white ms-2">Enhanced</span>
                                </h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Express Username:</strong></td><td><span class="badge bg-warning text-dark">${data.express_username || '-'}</span> <small class="text-success">(${(data.express_username || '').length} ตัว)</small></td></tr>
                                    <tr><td><strong>Express Password:</strong></td><td><code class="text-success">${data.express_password || '-'}</code> <small class="text-info">(4 ตัวเลขไม่ซ้ำ)</small></td></tr>
                                    <tr><td><strong>ประเภท:</strong></td><td><small class="text-muted">แผนกที่เปิดใช้งาน Express</small></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-check-circle me-1"></i>
                                    <small><strong>Enhanced:</strong> Username 1-7 ตัว, Password 4 ตัวเลขไม่ซ้ำ, แสดงได้ทั้งหมด</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    ` : ''}
                    
                    <!-- สิทธิ์พิเศษ -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-secondary">
                            <div class="card-header bg-secondary text-white">
                                <h6 class="mb-0"><i class="fas fa-shield-alt me-2"></i>สิทธิ์พิเศษ</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>การใช้งาน VPN:</strong></td><td><span class="badge bg-${vpnAccess ? 'success' : 'secondary'}">${vpnAccess ? 'อนุญาต' : 'ไม่อนุญาต'}</span></td></tr>
                                    <tr><td><strong>การปริ้นสี:</strong></td><td><span class="badge bg-${colorPrinting ? 'warning text-dark' : 'secondary'}">${colorPrinting ? 'อนุญาต' : 'ไม่อนุญาต'}</span></td></tr>
                                    <tr><td><strong>ระดับสิทธิ์:</strong></td><td><small class="text-muted">${(vpnAccess || colorPrinting) ? 'มีสิทธิ์พิเศษ' : 'สิทธิ์พื้นฐาน'}</small></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Final Fixed Summary -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-check-circle me-2"></i>สรุปการแก้ไข Final Fixed Version
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h6 class="text-success"><i class="fas fa-resize-arrows-alt me-1"></i> Icon Sizes</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-check text-success me-2"></i>ทุก Icon ขนาด 45x45px เท่ากัน</li>
                                            <li><i class="fas fa-check text-success me-2"></i>min-width: 45px ป้องกันการบีบ</li>
                                            <li><i class="fas fa-check text-success me-2"></i>bg-light + สี consistent</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-4">
                                        <h6 class="text-info"><i class="fas fa-link me-1"></i> Password Unification</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-check text-success me-2"></i>Email และ Login รหัสเดียวกัน</li>
                                            <li><i class="fas fa-check text-success me-2"></i>Unified field + auto-sync</li>
                                            <li><i class="fas fa-check text-success me-2"></i>Hidden fields สำหรับ backend</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-4">
                                        <h6 class="text-primary"><i class="fas fa-eye me-1"></i> Password Visibility</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-check text-success me-2"></i>type="text" ทั้งหมด</li>
                                            <li><i class="fas fa-check text-success me-2"></i>ไม่มี role check</li>
                                            <li><i class="fas fa-check text-success me-2"></i>แสดงได้ทุก role</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <hr>
                                
                                <div class="row">
                                    <div class="col-12">
                                        <h6 class="text-warning"><i class="fas fa-star me-1"></i> ฟีเจอร์เพิ่มเติม</h6>
                                        <ul class="list-unstyled mb-0">
                                            <li><i class="fas fa-phone text-success me-2"></i><strong>เบอร์โทร:</strong> อนุญาตซ้ำได้ (ครอบครัว/เพื่อนร่วมงาน)</li>
                                            <li><i class="fas fa-print text-info me-2"></i><strong>รหัสถ่ายเอกสาร:</strong> On Demand (กดปุ่มเมื่อต้องการ)</li>
                                            <li><i class="fas fa-bolt text-warning me-2"></i><strong>Express Enhanced:</strong> Username 1-7 ตัว, Password 4 ตัวเลขไม่ซ้ำ</li>
                                            <li><i class="fas fa-shield-alt text-secondary me-2"></i><strong>สิทธิ์พิเศษ:</strong> VPN + Color Printing switches</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- ข้อความสรุป -->
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="alert alert-success">
                            <i class="fas fa-thumbs-up me-2"></i>
                            <strong>Final Fixed Version:</strong> แก้ไขครบถ้วนตามที่ร้องขอ - Icon sizes เท่ากัน, Password เป็นรหัสเดียวกัน, แสดงรหัสผ่านได้ทั้งหมด
                        </div>
                    </div>
                </div>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        }
    };
    
    // Event Listeners Setup
    try {
        // Click handlers
        document.addEventListener('click', eventHandlers.handleMagicClick);
        document.addEventListener('click', eventHandlers.handlePasswordToggle);
        
        // Department change handler
        const departmentSelect = document.getElementById('department_id');
        if (departmentSelect) {
            departmentSelect.addEventListener('change', eventHandlers.handleDepartmentChange);
            console.log('✅ Department change listener attached (Final Fixed Version)');
        }
        
        // Phone format handler
        const phoneInput = document.getElementById('phone');
        if (phoneInput) {
            phoneInput.addEventListener('input', eventHandlers.handlePhoneFormat);
        }
        
        // English validation handlers
        const firstNameEn = document.getElementById('first_name_en');
        const lastNameEn = document.getElementById('last_name_en');
        
        if (firstNameEn) {
            firstNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            firstNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.username();
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                    
                    // Auto-generate Express fields if Express section is visible
                    const expressSection = document.getElementById('expressSection');
                    if (expressSection && expressSection.style.display !== 'none') {
                        const expressUsername = document.getElementById('express_username');
                        if (expressUsername && !expressUsername.value) {
                            expressUsername.value = generators.expressUsername();
                        }
                    }
                }, 300);
            });
        }
        
        if (lastNameEn) {
            lastNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            lastNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                }, 300);
            });
        }
        
        // Email domain change handler
        const emailDomain = document.getElementById('email_domain');
        if (emailDomain) {
            emailDomain.addEventListener('change', () => {
                autoGenerate.email();
                autoGenerate.showEmailPreview();
            });
        }
        
        // Email input sync with login_email
        const emailInput = document.getElementById('email');
        if (emailInput) {
            emailInput.addEventListener('input', (e) => {
                const loginEmail = document.getElementById('login_email');
                if (loginEmail) {
                    loginEmail.value = e.target.value;
                }
            });
        }
        
        // NEW: Unified password sync handler
        const unifiedPasswordInput = document.getElementById('unified_password');
        if (unifiedPasswordInput) {
            unifiedPasswordInput.addEventListener('input', (e) => {
                // Auto-sync with hidden fields for backend compatibility
                const emailPassword = document.getElementById('email_password');
                const systemPassword = document.getElementById('password');
                
                if (emailPassword) emailPassword.value = e.target.value;
                if (systemPassword) systemPassword.value = e.target.value;
                
                console.log('🔄 Unified password synced:', e.target.value);
            });
        }
        
        // Quick Action buttons
        const generateAllBtn = document.getElementById('generateAllBtn');
        if (generateAllBtn) {
            generateAllBtn.addEventListener('click', formActions.generateAll);
        }
        
        const clearAllBtn = document.getElementById('clearAllBtn');
        if (clearAllBtn) {
            clearAllBtn.addEventListener('click', formActions.clearAll);
        }
        
        const previewBtn = document.getElementById('previewBtn');
        if (previewBtn) {
            previewBtn.addEventListener('click', formActions.showPreview);
        }
        
        // Computer generation buttons
        const generateComputerBtn2 = document.getElementById('generateComputerBtn2');
        if (generateComputerBtn2) {
            generateComputerBtn2.addEventListener('click', async () => {
                const button = generateComputerBtn2;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                    
                    document.getElementById('computer_password').value = generators.password();
                    
                    utils.showNotification('💻 สร้างข้อมูลระบบคอมพิวเตอร์สำเร็จ!', 'success');
                } catch (error) {
                    console.error('Error in generateComputer:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        const generateComputerBtn = document.getElementById('generateComputerBtn');
        if (generateComputerBtn) {
            generateComputerBtn.addEventListener('click', async () => {
                const button = generateComputerBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                    
                    document.getElementById('computer_password').value = generators.password();
                    
                    utils.showNotification('💻 สร้างข้อมูลระบบคอมพิวเตอร์สำเร็จ!', 'success');
                } catch (error) {
                    console.error('Error in generateComputer:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // Express generation button (Enhanced)
        const generateExpressBtn = document.getElementById('generateExpressBtn');
        if (generateExpressBtn) {
            generateExpressBtn.addEventListener('click', async () => {
                const button = generateExpressBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('❌ กรุณากรอกชื่อภาษาอังกฤษก่อน', 'error');
                        return;
                    }
                    
                    const username = generators.expressUsername();
                    const password = generators.expressPassword();
                    
                    document.getElementById('express_username').value = username;
                    document.getElementById('express_password').value = password;
                    
                    utils.showNotification(`⚡ สร้างข้อมูล Express สำเร็จ! Username: ${username} (${username.length} ตัว), Password: ${password} (ไม่ซ้ำ)`, 'success');
                } catch (error) {
                    console.error('Error in generateExpress:', error);
                    utils.showNotification('❌ เกิดข้อผิดพลาดในการสร้างข้อมูล Express', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // Setup permission switches
        eventHandlers.handlePermissionSwitches();
        
        // Form submit handler
        const employeeForm = document.getElementById('employeeForm');
        if (employeeForm) {
            employeeForm.addEventListener('submit', function(e) {
                const submitBtn = document.getElementById('submitBtn');
                if (submitBtn) {
                    utils.showLoading(submitBtn);
                }
            });
        }
        
        console.log('✅ All event listeners attached successfully (Final Fixed Version)');
        
    } catch (error) {
        console.error('❌ Error setting up event listeners:', error);
    }
    
    // Initial setup
    setTimeout(() => {
        console.log('🔧 Starting initial setup... (Final Fixed Version)');
        
        try {
            // Auto-generate employee code and keycard if empty
            const employeeCodeEl = document.getElementById('employee_code');
            const keycardIdEl = document.getElementById('keycard_id');
            
            if (employeeCodeEl && !employeeCodeEl.value) {
                employeeCodeEl.value = generators.employeeCode();
                console.log('✅ Employee code generated');
            }
            
            if (keycardIdEl && !keycardIdEl.value) {
                keycardIdEl.value = generators.keycardId();
                console.log('✅ Keycard ID generated');
            }
            
            // Initialize department change handler
            eventHandlers.handleDepartmentChange();
            
            // Force trigger department change if already selected
            const departmentSelect = document.getElementById('department_id');
            if (departmentSelect && departmentSelect.value) {
                console.log('🔄 Force triggering department change for:', departmentSelect.options[departmentSelect.selectedIndex]?.textContent);
                eventHandlers.handleDepartmentChange();
            }
            
            console.log('✅ Department handler initialized (Final Fixed Version)');
            
            // Initialize email preview
            autoGenerate.showEmailPreview();
            console.log('✅ Email preview initialized');
            
            // Initialize permission switches
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnStatus) vpnStatus.textContent = 'ไม่อนุญาต';
            if (printingStatus) printingStatus.textContent = 'ไม่อนุญาต';
            
            console.log('✅ Permission switches initialized');
            
            // Debug functions for testing (Final Fixed Version)
            window.testFinalFixed = function() {
                console.log('🧪 Testing Final Fixed Features:');
                console.log('   1. Express Username:', generators.expressUsername());
                console.log('   2. Express Password:', generators.expressPassword());
                console.log('   3. Unique Numbers:', utils.generateUniqueNumbers(4));
                autoGenerate.unifiedPassword();
                console.log('   4. Unified Password: Completed');
            };
            
            window.testIconConsistency = function() {
                const icons = document.querySelectorAll('.card-header .rounded-circle');
                console.log('🎨 Icon Consistency Check:');
                icons.forEach((icon, index) => {
                    const styles = window.getComputedStyle(icon);
                    console.log(`   Icon ${index + 1}: ${styles.width} x ${styles.height} (${styles.minWidth})`);
                });
            };
            
            window.testPasswordSync = function() {
                const testPassword = 'Test123456';
                document.getElementById('unified_password').value = testPassword;
                document.getElementById('unified_password').dispatchEvent(new Event('input'));
                
                console.log('🔄 Password Sync Test:');
                console.log('   Unified:', document.getElementById('unified_password').value);
                console.log('   Email:', document.getElementById('email_password').value);
                console.log('   System:', document.getElementById('password').value);
            };
            
            console.log('🧪 Final Fixed Debug functions available:');
            console.log('   - testFinalFixed() - ทดสอบฟีเจอร์ที่แก้ไข');
            console.log('   - testIconConsistency() - ตรวจสอบขนาด Icons');
            console.log('   - testPasswordSync() - ทดสอบ Password sync');
            
            console.log('✅ Employee Create Form Ready - Final Fixed Version');
            console.log('📐 Icon Sizes: ทุก icon ขนาด 45x45px เท่ากัน (min-width: 45px)');
            console.log('🔗 Password Sync: Email และ Login ใช้รหัสผ่านเดียวกัน (Unified)');
            console.log('👁️ Password Visibility: แสดงรหัสผ่านได้ทั้งหมด (type="text")');
            console.log('📧 Email Format: firstname.lastnameFirstChar@domain');
            console.log('🔄 Available Domains: @bettersystem.co.th, @better-groups.com');
            console.log('👤 Username Format: firstname (lowercase only)');
            console.log('💻 Computer: Username + Password + Copier Code (On Demand)');
            console.log('⚡ Express v2.0 Enhanced:');
            console.log('   • Username: 1-7 ตัวอักษร (ไม่ต้อง pad)');
            console.log('   • Password: 4 ตัวเลขไม่ซ้ำกัน');
            console.log('   • แสดงได้ทั้งหมด');
            console.log('📞 Phone: ซ้ำได้ (ครอบครัว/เพื่อนร่วมงาน)');
            console.log('🛡️ Permissions: VPN + Color Printing switches');
            console.log('🎨 Icons: User, Desktop, Email, Building, Bolt, Shield (45x45px consistent)');
            console.log('🔧 API Endpoint: /api/departments/is-accounting?department_id=X');
            console.log('🎯 Express Detection: Uses express_enabled field from departments table');
            console.log('🚀 All issues FIXED - Ready for production use!');
            
        } catch (error) {
            console.error('❌ Error in initial setup:', error);
        }
    }, 1000);
});

// Modal functions
function submitForm() {
    const form = document.getElementById('employeeForm');
    if (form) {
        form.submit();
    }
}

// Global Final Fixed test functions
window.FinalFixedTest = {
    testUnifiedPassword: function() {
        const password = 'TestPassword123';
        document.getElementById('unified_password').value = password;
        document.getElementById('unified_password').dispatchEvent(new Event('input'));
        
        console.log('🔄 Unified Password Test Result:');
        console.log('   Unified Field:', document.getElementById('unified_password').value);
        console.log('   Email Password:', document.getElementById('email_password').value);
        console.log('   System Password:', document.getElementById('password').value);
        console.log('   All synced:', document.getElementById('unified_password').value === document.getElementById('email_password').value && document.getElementById('email_password').value === document.getElementById('password').value);
    },
    
    testIconSizes: function() {
        const icons = document.querySelectorAll('.card-header .rounded-circle');
        const results = [];
        
        icons.forEach((icon, index) => {
            const styles = window.getComputedStyle(icon);
            const result = {
                index: index + 1,
                width: styles.width,
                height: styles.height,
                minWidth: styles.minWidth,
                consistent: styles.width === '45px' && styles.height === '45px'
            };
            results.push(result);
        });
        
        console.log('🎨 Icon Size Test Results:', results);
        const allConsistent = results.every(r => r.consistent);
        console.log('✅ All icons consistent:', allConsistent);
        return results;
    },
    
    testPasswordVisibility: function() {
        const passwordFields = [
            'computer_password',
            'unified_password',
            'express_password'
        ];
        
        const results = passwordFields.map(fieldId => {
            const field = document.getElementById(fieldId);
            return {
                field: fieldId,
                exists: !!field,
                type: field ? field.type : 'not found',
                visible: field ? field.type === 'text' : false
            };
        });
        
        console.log('👁️ Password Visibility Test Results:', results);
        const allVisible = results.filter(r => r.exists).every(r => r.visible);
        console.log('✅ All passwords visible:', allVisible);
        return results;
    },
    
    info: function() {
        console.log('🚀 Final Fixed Version Test Functions:');
        console.log('   FinalFixedTest.testUnifiedPassword() - ทดสอบ Password sync');
        console.log('   FinalFixedTest.testIconSizes() - ทดสอบขนาด Icons');
        console.log('   FinalFixedTest.testPasswordVisibility() - ทดสอบการแสดง Password');
        console.log('');
        console.log('🔧 Fixed Issues Summary:');
        console.log('   ✅ Icon sizes: ทุก icon 45x45px เท่ากัน');
        console.log('   ✅ Password unification: Email = Login (รหัสเดียวกัน)');
        console.log('   ✅ Password visibility: แสดงได้ทั้งหมด (type="text")');
    }
};

// Show final fixed info on load
console.log('📋 พิมพ์ FinalFixedTest.info() เพื่อดูคำสั่งทดสอบ Final Fixed Version');
</script>
@endpush
