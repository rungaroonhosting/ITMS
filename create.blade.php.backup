@extends('layouts.app')

@section('title', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà')

@section('breadcrumb')
    <li class="breadcrumb-item"><a href="{{ route('employees.index') }}">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</a></li>
    <li class="breadcrumb-item active">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</li>
@endsection

@section('content')
<!-- Page Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-0 text-primary fw-bold">
                    <i class="fas fa-user-plus me-2"></i>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
                </h1>
                <p class="text-muted mb-0">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Express v2.0 Enhanced)</p>
                <div class="mt-2">
                    <span class="badge bg-info">
                        <i class="fas fa-info-circle me-1"></i>
                        Email ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å ‡∏ä‡∏∑‡πà‡∏≠.‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•@‡πÇ‡∏î‡πÄ‡∏°‡∏ô
                    </span>
                    <span class="badge bg-warning">
                        <i class="fas fa-bolt me-1"></i>
                        Express ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    </span>
                    <span class="badge bg-success">
                        <i class="fas fa-phone me-1"></i>
                        ‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢
                    </span>
                    <span class="badge bg-primary">
                        <i class="fas fa-eye me-1"></i>
                        ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    </span>
                </div>
            </div>
            <a href="{{ route('employees.index') }}" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>‡∏Å‡∏•‡∏±‡∏ö
            </a>
        </div>
    </div>
</div>

<!-- Success Alert for Phone Fix -->
@if(!$errors->any())
<div class="alert alert-success alert-dismissible fade show" role="alert">
    <h6 class="fw-bold"><i class="fas fa-check-circle me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï!</h6>
    <div class="row">
        <div class="col-md-6">
            <ul class="mb-0">
                <li><strong>‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ:</strong> ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô</li>
                <li><strong>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:</strong> ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß, ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®</li>
            </ul>
        </div>
        <div class="col-md-6">
            <ul class="mb-0">
                <li><strong>üîí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢:</strong> Email, Username ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á unique</li>
                <li><strong>‚ö° Express v2.0:</strong> ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö</li>
            </ul>
        </div>
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
</div>
@endif

<!-- Quick Actions -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row text-center g-3">
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-primary w-100 flex-fill d-flex align-items-center justify-content-center" id="generateAllBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-magic me-2"></i>
                            <span class="d-none d-lg-inline">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</span>
                            <span class="d-lg-none">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• EN ‡∏Å‡πà‡∏≠‡∏ô</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-info w-100 flex-fill d-flex align-items-center justify-content-center" id="previewBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-eye me-2"></i>
                            <span>‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-warning w-100 flex-fill d-flex align-items-center justify-content-center" id="clearAllBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-trash me-2"></i>
                            <span>‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-muted">‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="d-flex flex-column h-100">
                    <button type="button" class="btn btn-outline-success w-100 flex-fill d-flex align-items-center justify-content-center" id="testPhoneDuplicateBtn" style="min-height: 45px;">
                        <span class="d-flex align-items-center">
                            <i class="fas fa-phone me-2"></i>
                            <span class="d-none d-lg-inline">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ã‡πâ‡∏≥</span>
                            <span class="d-lg-none">‡∏ó‡∏î‡∏™‡∏≠‡∏ö</span>
                        </span>
                    </button>
                    <div class="form-text mt-2">
                        <small class="text-success">‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Form -->
<form id="employeeForm" action="{{ route('employees.store') }}" method="POST">
    @csrf
    
    <!-- Error Messages -->
    @if ($errors->any())
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <h6 class="fw-bold"><i class="fas fa-exclamation-triangle me-2"></i>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:</h6>
            <ul class="mb-0">
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
            <div class="mt-2">
                <small class="text-info">
                    <i class="fas fa-info-circle me-1"></i>
                    <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥ ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß - ‡∏•‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏´‡∏°‡πà
                </small>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    @endif
    
    <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-primary rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-user text-primary" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h5>
                    <small class="text-muted">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- ‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô -->
                <div class="col-md-6">
                    <label for="employee_code" class="form-label">‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</label>
                    <div class="input-group">
                        @php $userRole = auth()->user()->role ?? 'employee'; @endphp
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥">
                        @else
                            <input type="text" class="form-control @error('employee_code') is-invalid @enderror" 
                                   id="employee_code" name="employee_code" value="{{ old('employee_code') }}" 
                                   placeholder="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="employee_code">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô EMP001
                        @else
                            ‡∏£‡∏´‡∏±‡∏™‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô EMP001 (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ)
                        @endif
                    </div>
                    @error('employee_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ID Keycard -->
                <div class="col-md-6">
                    <label for="keycard_id" class="form-label">ID Keycard</label>
                    <div class="input-group">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="‡∏Å‡∏£‡∏≠‡∏Å ID Keycard ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥">
                        @else
                            <input type="text" class="form-control @error('keycard_id') is-invalid @enderror" 
                                   id="keycard_id" name="keycard_id" value="{{ old('keycard_id') }}" 
                                   placeholder="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥" readonly>
                        @endif
                        <button type="button" class="btn btn-outline-primary" data-target="keycard_id">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô KC123456
                        @else
                            ‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏±‡∏ï‡∏£‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô KC123456 (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ)
                        @endif
                    </div>
                    @error('keycard_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ -->
                <div class="col-md-6">
                    <label for="first_name_th" class="form-label">
                        ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_th') is-invalid @enderror" 
                           id="first_name_th" name="first_name_th" value="{{ old('first_name_th') }}" 
                           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" required>
                    @error('first_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ -->
                <div class="col-md-6">
                    <label for="last_name_th" class="form-label">
                        ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_th') is-invalid @enderror" 
                           id="last_name_th" name="last_name_th" value="{{ old('last_name_th') }}" 
                           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" required>
                    @error('last_name_th')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© -->
                <div class="col-md-6">
                    <label for="first_name_en" class="form-label">
                        ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('first_name_en') is-invalid @enderror" 
                           id="first_name_en" name="first_name_en" value="{{ old('first_name_en') }}" 
                           placeholder="First Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A-Z ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Username ‡πÅ‡∏•‡∏∞ Express)
                        </small>
                    </div>
                    @error('first_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© -->
                <div class="col-md-6">
                    <label for="last_name_en" class="form-label">
                        ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© <span class="text-danger">*</span>
                    </label>
                    <input type="text" class="form-control @error('last_name_en') is-invalid @enderror" 
                           id="last_name_en" name="last_name_en" value="{{ old('last_name_en') }}" 
                           placeholder="Last Name" required>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-globe me-1"></i>
                            ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A-Z ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Username ‡πÅ‡∏•‡∏∞ Email)
                        </small>
                    </div>
                    @error('last_name_en')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‚úÖ FIXED - ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏¥‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß) -->
                <div class="col-md-6">
                    <label for="phone" class="form-label">
                        ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">‚úÖ ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</span>
                    </label>
                    <input type="tel" class="form-control @error('phone') is-invalid @enderror" 
                           id="phone" name="phone" value="{{ old('phone') }}" 
                           placeholder="08x-xxx-xxxx" required>
                    <div class="form-text">
                        <div class="alert alert-success p-2 mt-2 mb-0">
                            <small>
                                <i class="fas fa-check-circle me-1"></i>
                                <strong>‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß:</strong> ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
                            </small>
                            <br>
                            <small class="text-muted">
                                <i class="fas fa-users me-1"></i>
                                ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß, ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ö‡πâ‡∏≤‡∏ô
                            </small>
                            <br>
                            <small class="text-info">
                                <i class="fas fa-shield-alt me-1"></i>
                                Email ‡πÅ‡∏•‡∏∞ Username ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á unique (‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
                            </small>
                        </div>
                    </div>
                    @error('phone')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô -->
                <div class="col-md-6">
                    <label for="nickname" class="form-label">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô</label>
                    <input type="text" class="form-control @error('nickname') is-invalid @enderror" 
                           id="nickname" name="nickname" value="{{ old('nickname') }}" 
                           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô">
                    @error('nickname')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-success rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-desktop text-success" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</h5>
                    <small class="text-muted">Username ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="generateComputerBtn">
                <i class="fas fa-desktop me-1"></i>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏Ø
            </button>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Username -->
                <div class="col-md-6">
                    <label for="username" class="form-label">
                        Username (‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå) <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('username') is-invalid @enderror" 
                               id="username" 
                               name="username" 
                               value="{{ old('username') }}"
                               placeholder="‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ EN"
                               required>
                        <button type="button" class="btn btn-outline-primary" data-target="username">
                            <i class="fas fa-user"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: <strong>‡∏ä‡∏∑‡πà‡∏≠</strong> ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å (‡πÄ‡∏ä‡πà‡∏ô john)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                Username ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Email
                            </small>
                        </div>
                    </div>
                    @error('username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Computer Password (‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) -->
                <div class="col-md-6">
                    <label for="computer_password" class="form-label">
                        Password (‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå)
                        <span class="badge bg-primary ms-2">‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('computer_password') is-invalid @enderror" 
                               id="computer_password" 
                               name="computer_password" 
                               value="{{ old('computer_password') }}"
                               placeholder="Random 10 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£">
                        <button type="button" class="btn btn-outline-primary" data-target="computer_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="computer_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå 
                        <span class="text-success">(‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)</span>
                    </div>
                    @error('computer_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Copier Code (On Demand) -->
                <div class="col-md-6">
                    <label for="copier_code" class="form-label">
                        ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
                        <span class="badge bg-info ms-2">On Demand</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('copier_code') is-invalid @enderror" 
                               id="copier_code" 
                               name="copier_code" 
                               value="{{ old('copier_code') }}"
                               placeholder="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á" 
                               maxlength="4">
                        <button type="button" class="btn btn-outline-primary" data-target="copier_code">
                            <i class="fas fa-print"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <small class="text-muted">
                            <i class="fas fa-mouse-pointer me-1"></i>
                            ‡∏£‡∏´‡∏±‡∏™ 4 ‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç - ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á
                        </small>
                    </div>
                    @error('copier_code')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞ Login (‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô - ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡∏∏‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô) -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-info rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-envelope text-info" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞ Login</h5>
                    <small class="text-muted">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö (‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-success">
                <i class="fas fa-sync me-2"></i>
                <strong>‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß:</strong> ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô Email ‡πÅ‡∏•‡∏∞ Login ‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≥‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™) ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            </div>
            
            <div class="row g-3">
                <!-- Email -->
                <div class="col-md-8">
                    <label for="email" class="form-label">
                        ‡∏≠‡∏µ‡πÄ‡∏°‡∏• <span class="text-danger">*</span>
                        <span class="badge bg-info ms-2">Auto Generate</span>
                    </label>
                    <div class="input-group">
                        <input type="email" 
                               class="form-control @error('email') is-invalid @enderror" 
                               id="email" 
                               name="email" 
                               value="{{ old('email') }}"
                               placeholder="‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠.‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                               required>
                        <select class="form-select" id="email_domain" style="max-width: 220px;">
                            <option value="bettersystem.co.th">@bettersystem.co.th</option>
                            <option value="better-groups.com">@better-groups.com</option>
                        </select>
                        <button type="button" class="btn btn-outline-primary" data-target="email">
                            <i class="fas fa-envelope"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: <strong>‡∏ä‡∏∑‡πà‡∏≠.‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•@‡πÇ‡∏î‡πÄ‡∏°‡∏ô</strong>
                        <div id="emailPreview" class="mt-2" style="display: none;">
                            <span class="text-success">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: </span>
                            <code class="text-primary" id="emailPreviewText"></code>
                        </div>
                        <div class="mt-2">
                            <small class="text-success">
                                <i class="fas fa-link me-1"></i>
                                Email ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Login Email ‡∏î‡πâ‡∏ß‡∏¢ (‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡∏∏‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)
                            </small>
                        </div>
                    </div>
                    @error('email')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Unified Password (Email + Login) -->
                <div class="col-md-4">
                    <label for="unified_password" class="form-label">
                        Password (Email + Login) <span class="text-danger">*</span>
                        <span class="badge bg-success ms-2">Unified</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('unified_password') is-invalid @enderror" 
                               id="unified_password" 
                               name="unified_password" 
                               value="{{ old('unified_password') }}"
                               placeholder="Random 10 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£"
                               required>
                        <button type="button" class="btn btn-outline-primary" data-target="unified_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="unified_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <span class="text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Email ‡πÅ‡∏•‡∏∞ Login ‡∏£‡∏∞‡∏ö‡∏ö (‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
                        </span>
                    </div>
                    @error('unified_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Hidden fields for backend compatibility -->
                <input type="hidden" id="email_password" name="email_password" value="{{ old('email_password') }}">
                <input type="hidden" id="password" name="password" value="{{ old('password') }}">
                <input type="hidden" id="login_email" name="login_email" value="{{ old('login_email') }}">
            </div>
        </div>
    </div>

    <!-- ‡πÅ‡∏ú‡∏ô‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-warning rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-building text-warning" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">‡πÅ‡∏ú‡∏ô‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</h5>
                    <small class="text-muted">‡πÅ‡∏ú‡∏ô‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Department -->
                <div class="col-md-6">
                    <label for="department_id" class="form-label">
                        ‡πÅ‡∏ú‡∏ô‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô <span class="text-danger">*</span>
                        <span class="badge bg-warning text-dark ms-2" id="expressIndicator" style="display: none;">
                            <i class="fas fa-bolt me-1"></i>Express Ready
                        </span>
                    </label>
                    <select class="form-select @error('department_id') is-invalid @enderror" 
                            id="department_id" 
                            name="department_id" 
                            required>
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å</option>
                        @php
                            // ‡πÉ‡∏ä‡πâ departments ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å controller ‡∏´‡∏£‡∏∑‡∏≠ fallback
                            if (isset($departments) && is_object($departments)) {
                                $deptCollection = $departments;
                            } elseif (isset($departments) && is_array($departments)) {
                                $deptCollection = collect($departments);
                            } else {
                                // Fallback departments
                                $deptCollection = collect([
                                    (object)['id' => 1, 'name' => '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', 'express_enabled' => true],
                                    (object)['id' => 2, 'name' => 'IT', 'express_enabled' => false],
                                    (object)['id' => 3, 'name' => '‡∏ù‡πà‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢', 'express_enabled' => false],
                                    (object)['id' => 4, 'name' => '‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î', 'express_enabled' => false],
                                    (object)['id' => 5, 'name' => '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•', 'express_enabled' => false],
                                    (object)['id' => 6, 'name' => '‡∏ú‡∏•‡∏¥‡∏ï', 'express_enabled' => false],
                                    (object)['id' => 7, 'name' => '‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', 'express_enabled' => false],
                                    (object)['id' => 8, 'name' => '‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£', 'express_enabled' => false],
                                ]);
                            }
                        @endphp
                        
                        @if($userRole === 'express')
                            @foreach($deptCollection->where('express_enabled', true) as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @else
                            @foreach($deptCollection as $department)
                                <option value="{{ $department->id }}" 
                                        data-express="{{ $department->express_enabled ?? false ? 'true' : 'false' }}"
                                        {{ old('department_id') == $department->id ? 'selected' : '' }}>
                                    {{ $department->name }}
                                    @if($department->express_enabled ?? false)
                                        (Express)
                                    @endif
                                </option>
                            @endforeach
                        @endif
                    </select>
                    @error('department_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                    @if($userRole === 'express')
                        <div class="form-text text-info">Express: ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Express</div>
                    @elseif($userRole === 'super_admin')
                        <div class="form-text text-success">
                            <i class="fas fa-plus-circle me-1"></i>
                            SuperAdmin: ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Express ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡πÑ‡∏î‡πâ‡πÉ‡∏ô
                            <a href="{{ route('departments.index') }}" target="_blank">‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ú‡∏ô‡∏Å</a>
                        </div>
                    @endif
                </div>

                <!-- Position -->
                <div class="col-md-6">
                    <label for="position" class="form-label">
                        ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á <span class="text-danger">*</span>
                    </label>
                    <input type="text" 
                           class="form-control @error('position') is-invalid @enderror" 
                           id="position" 
                           name="position" 
                           value="{{ old('position') }}"
                           placeholder="‡πÄ‡∏ä‡πà‡∏ô Developer, Accountant"
                           required>
                    @error('position')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Role -->
                <div class="col-md-6">
                    <label for="role" class="form-label">
                        ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('role') is-invalid @enderror" 
                            id="role" 
                            name="role" 
                            required>
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</option>
                        <option value="employee" {{ old('role') == 'employee' ? 'selected' : '' }}>‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (Employee)</option>
                        @if($userRole === 'super_admin' || $userRole === 'it_admin')
                            <option value="hr" {{ old('role') == 'hr' ? 'selected' : '' }}>‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (HR)</option>
                            <option value="manager" {{ old('role') == 'manager' ? 'selected' : '' }}>‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (Manager)</option>
                            <option value="express" {{ old('role') == 'express' ? 'selected' : '' }}>Express User</option>
                            @if($userRole === 'super_admin')
                                <option value="it_admin" {{ old('role') == 'it_admin' ? 'selected' : '' }}>IT Admin</option>
                            @endif
                        @endif
                    </select>
                    @error('role')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Status -->
                <div class="col-md-6">
                    <label for="status" class="form-label">
                        ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ <span class="text-danger">*</span>
                    </label>
                    <select class="form-select @error('status') is-invalid @enderror" 
                            id="status" 
                            name="status" 
                            required>
                        <option value="active" {{ old('status') == 'active' ? 'selected' : '' }}>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Active)</option>
                        <option value="inactive" {{ old('status') == 'inactive' ? 'selected' : '' }}>‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Inactive)</option>
                    </select>
                    @error('status')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Express (Dynamic v2.0 Enhanced) -->
    <div class="card mb-4" id="expressSection" style="display: none;">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-danger rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-bolt text-danger" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">
                        ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Express v2.0
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </h5>
                    <small class="text-muted">‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Express - ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÉ‡∏´‡∏°‡πà</small>
                </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-warning" id="generateExpressBtn">
                <i class="fas fa-bolt me-1"></i>‡∏™‡∏£‡πâ‡∏≤‡∏á Express
            </button>
        </div>
        <div class="card-body">
            <div class="alert alert-success" role="alert">
                <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle me-2"></i>
                    <div>
                        <strong>Express v2.0 Enhanced:</strong> ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
                        <div class="mt-2">
                            <span class="badge bg-success me-1">
                                <i class="fas fa-user me-1"></i>Username: 1-7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                            </span>
                            <span class="badge bg-info me-1">
                                <i class="fas fa-lock me-1"></i>Password: 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)
                            </span>
                            <span class="badge bg-primary me-1">
                                <i class="fas fa-eye me-1"></i>‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row g-3">
                <!-- Express Username (Enhanced: 1-7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) -->
                <div class="col-md-6">
                    <label for="express_username" class="form-label">
                        Username Express (1-7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)
                        <span class="badge bg-warning text-dark ms-2">Enhanced</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('express_username') is-invalid @enderror" 
                               id="express_username" 
                               name="express_username" 
                               value="{{ old('express_username') }}"
                               placeholder="‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ EN (1-7 ‡∏ï‡∏±‡∏ß)" 
                               maxlength="7">
                        <button type="button" class="btn btn-outline-primary" data-target="express_username">
                            <i class="fas fa-bolt"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <strong class="text-success">‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà:</strong> ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÑ‡∏î‡πâ 1-7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á pad)
                        <div class="mt-1">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb me-1"></i>
                                ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: "John" ‚Üí "john", "Alexandra" ‚Üí "alexand"
                            </small>
                        </div>
                    </div>
                    @error('express_username')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Express Password (Enhanced: 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥) -->
                <div class="col-md-6">
                    <label for="express_password" class="form-label">
                        Password ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Express
                        <span class="badge bg-success ms-2">Numbers Only</span>
                        <span class="badge bg-primary ms-2">‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ</span>
                    </label>
                    <div class="input-group">
                        <input type="text" 
                               class="form-control @error('express_password') is-invalid @enderror" 
                               id="express_password" 
                               name="express_password" 
                               value="{{ old('express_password') }}"
                               placeholder="4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥" 
                               maxlength="4"
                               pattern="[0-9]{4}">
                        <button type="button" class="btn btn-outline-primary" data-target="express_password">
                            <i class="fas fa-lock"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-toggle-password="express_password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div class="form-text">
                        <strong class="text-success">‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà:</strong> 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô (‡πÄ‡∏ä‡πà‡∏ô 1234, 5678) 
                        <span class="text-success">(‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)</span>
                        <div class="mt-1">
                            <small class="text-info">
                                <i class="fas fa-calculator me-1"></i>
                                ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: 1357, 2468, 1029 (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡πÄ‡∏•‡∏Ç)
                            </small>
                        </div>
                    </div>
                    @error('express_password')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
    </div>

    <!-- ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏© -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <div class="border border-2 border-secondary rounded-circle d-flex align-items-center justify-content-center me-3 bg-light" style="width: 45px; height: 45px; min-width: 45px;">
                    <i class="fas fa-shield-alt text-secondary" style="font-size: 20px;"></i>
                </div>
                <div>
                    <h5 class="card-title mb-0">‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©</h5>
                    <small class="text-muted">‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- VPN Permission -->
                <div class="col-md-6">
                    <div class="card border-primary">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-shield-alt text-primary fa-2x"></i>
                            </div>
                            <h6 class="card-title">‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô VPN</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="vpn_access" 
                                       name="vpn_access" 
                                       value="1"
                                       {{ old('vpn_access') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="vpn_access">
                                    <span id="vpnStatus">{{ old('vpn_access') ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ VPN ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Color Printing Permission -->
                <div class="col-md-6">
                    <div class="card border-warning">
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <i class="fas fa-palette text-warning fa-2x"></i>
                            </div>
                            <h6 class="card-title">‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏™‡∏µ</h6>
                            <div class="form-check form-switch d-flex justify-content-center">
                                <input class="form-check-input" 
                                       type="checkbox" 
                                       id="color_printing" 
                                       name="color_printing" 
                                       value="1"
                                       {{ old('color_printing') ? 'checked' : '' }}>
                                <label class="form-check-label ms-2" for="color_printing">
                                    <span id="printingStatus">{{ old('color_printing') ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' }}</span>
                                </label>
                            </div>
                            <small class="text-muted">
                                ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row mt-3">
                <div class="col-12">
                    <div class="alert alert-info mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏¢ Admin
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Actions -->
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <a href="{{ route('employees.index') }}" 
                   class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </a>
                
                <button type="submit" 
                        class="btn btn-primary"
                        id="submitBtn">
                    <i class="fas fa-plus me-2"></i>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
                </button>
            </div>
        </div>
    </div>
</form>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">
                    <i class="fas fa-eye me-2"></i>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô (Phone Duplicates Fixed)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Preview content will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
                <button type="button" class="btn btn-primary" onclick="submitForm()">
                    ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Phone Duplicate Test Modal -->
<div class="modal fade" id="phoneDuplicateModal" tabindex="-1" aria-labelledby="phoneDuplicateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="phoneDuplicateModalLabel">
                    <i class="fas fa-phone me-2"></i>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥ ‚úÖ
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-success">
                    <h6><i class="fas fa-check-circle me-2"></i>‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!</h6>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <h6>‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß:</h6>
                        <ul class="list-unstyled">
                            <li><i class="fas fa-check text-success me-2"></i>‡∏•‡∏ö unique constraint ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
                            <li><i class="fas fa-check text-success me-2"></i>‡∏•‡∏ö validation rule ‡∏à‡∏≤‡∏Å Request</li>
                            <li><i class="fas fa-check text-success me-2"></i>‡∏•‡∏ö validation ‡∏à‡∏≤‡∏Å Controller</li>
                            <li><i class="fas fa-check text-success me-2"></i>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6>üéØ ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:</h6>
                        <ul class="list-unstyled">
                            <li><i class="fas fa-users text-info me-2"></i>‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ</li>
                            <li><i class="fas fa-building text-warning me-2"></i>‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®</li>
                            <li><i class="fas fa-home text-success me-2"></i>‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ö‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ</li>
                            <li><i class="fas fa-mobile text-primary me-2"></i>‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</li>
                        </ul>
                    </div>
                </div>
                
                <hr>
                
                <div class="row">
                    <div class="col-12">
                        <h6>üîí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏°‡∏µ:</h6>
                        <div class="row">
                            <div class="col-md-4">
                                <span class="badge bg-danger me-1">Unique</span>
                                <small>‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</small>
                            </div>
                            <div class="col-md-4">
                                <span class="badge bg-danger me-1">Unique</span>
                                <small>Username</small>
                            </div>
                            <div class="col-md-4">
                                <span class="badge bg-danger me-1">Unique</span>
                                <small>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</small>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-4">
                                <span class="badge bg-danger me-1">Unique</span>
                                <small>Express Username</small>
                            </div>
                            <div class="col-md-4">
                                <span class="badge bg-danger me-1">Unique</span>
                                <small>ID Keycard</small>
                            </div>
                            <div class="col-md-4">
                                <span class="badge bg-success me-1">Duplicate OK</span>
                                <small>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‚úÖ</small>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="mt-3">
                    <div class="alert alert-info mb-0">
                        <i class="fas fa-lightbulb me-2"></i>
                        <strong>‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> ‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ error ‡πÅ‡∏•‡πâ‡∏ß!
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-bs-dismiss="modal">
                    <i class="fas fa-thumbs-up me-1"></i>‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß
                </button>
            </div>
        </div>
    </div>
</div>

@endsection

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Employee Create Form Loaded - Phone Duplicates Fixed Version Ready');
    
    // Utility Functions
    const utils = {
        showLoading: (button) => {
            button.disabled = true;
            const originalText = button.innerHTML;
            button.dataset.originalText = originalText;
            button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...';
        },
        
        hideLoading: (button) => {
            button.disabled = false;
            if (button.dataset.originalText) {
                button.innerHTML = button.dataset.originalText;
            }
        },
        
        generateRandomString: (length, includeNumbers = true) => {
            const chars = includeNumbers ? 
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' :
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        },
        
        generateRandomNumber: (length) => {
            let result = '';
            for (let i = 0; i < length; i++) {
                result += Math.floor(Math.random() * 10);
            }
            return result;
        },
        
        // Enhanced: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç 4 ‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
        generateUniqueNumbers: (length = 4) => {
            const digits = [];
            while (digits.length < length) {
                const digit = Math.floor(Math.random() * 10);
                if (!digits.includes(digit)) {
                    digits.push(digit);
                }
            }
            return digits.join('');
        },
        
        showNotification: (message, type = 'success') => {
            const alertClass = type === 'success' ? 'alert-success' : 
                              type === 'error' ? 'alert-danger' : 
                              type === 'warning' ? 'alert-warning' : 'alert-info';
            const iconClass = type === 'success' ? 'fa-check-circle' : 
                             type === 'error' ? 'fa-exclamation-triangle' :
                             type === 'warning' ? 'fa-exclamation-circle' : 'fa-info-circle';
            const alert = document.createElement('div');
            alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';
            alert.innerHTML = `
                <i class="fas ${iconClass} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }
    };
    
    // Enhanced Generator Functions
    const generators = {
        employeeCode: () => `EMP${utils.generateRandomNumber(3)}`,
        keycardId: () => `KC${utils.generateRandomNumber(6)}`,
        username: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && englishRegex.test(firstName)) {
                return firstName.toLowerCase();
            }
            return '';
        },
        email: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName && domain && englishRegex.test(firstName) && englishRegex.test(lastName)) {
                return `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
            }
            return '';
        },
        password: () => utils.generateRandomString(10, true),
        copierCode: () => utils.generateRandomNumber(4),
        
        // Enhanced Express Username: 1-7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
        expressUsername: () => {
            const firstName = document.getElementById('first_name_en').value.trim().toLowerCase();
            if (firstName.length > 0) {
                return firstName.length <= 7 ? firstName : firstName.substring(0, 7);
            }
            return utils.generateRandomString(5, false).toLowerCase();
        },
        
        // Enhanced Express Password: 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
        expressPassword: () => utils.generateUniqueNumbers(4),
        
        // ‚úÖ NEW: Phone number generator (duplicates allowed)
        phoneNumber: () => {
            const prefixes = ['08', '09', '06', '02'];
            const prefix = prefixes[Math.floor(Math.random() * prefixes.length)];
            const middle = utils.generateRandomNumber(3);
            const last = utils.generateRandomNumber(4);
            return `${prefix}${middle}-${last}`;
        }
    };
    
    // Auto-generation functions
    const autoGenerate = {
        username: () => {
            const username = generators.username();
            if (username) {
                document.getElementById('username').value = username;
                
                // Add animation
                const usernameInput = document.getElementById('username');
                usernameInput.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                usernameInput.style.transform = 'scale(1.02)';
                usernameInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    usernameInput.style.background = '';
                    usernameInput.style.transform = '';
                }, 1500);
                
                console.log('‚úÖ Username generated:', username);
            }
        },
        
        email: () => {
            const email = generators.email();
            if (email) {
                document.getElementById('email').value = email;
                // Auto-sync with hidden login_email field
                document.getElementById('login_email').value = email;
                autoGenerate.showEmailPreview();
                
                // Add animation
                const emailInput = document.getElementById('email');
                emailInput.style.background = 'linear-gradient(45deg, #e3f2fd, #f3e5f5)';
                emailInput.style.transform = 'scale(1.02)';
                emailInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    emailInput.style.background = '';
                    emailInput.style.transform = '';
                }, 1500);
                
                console.log('‚úÖ Email generated:', email);
            }
        },
        
        // NEW: Unified password generation and sync
        unifiedPassword: () => {
            const password = generators.password();
            if (password) {
                // Set unified password field
                document.getElementById('unified_password').value = password;
                
                // Auto-sync with hidden fields for backend compatibility
                document.getElementById('email_password').value = password;
                document.getElementById('password').value = password;
                
                // Add animation
                const passwordInput = document.getElementById('unified_password');
                passwordInput.style.background = 'linear-gradient(45deg, #e8f5e8, #fff3e0)';
                passwordInput.style.transform = 'scale(1.02)';
                passwordInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    passwordInput.style.background = '';
                    passwordInput.style.transform = '';
                }, 1500);
                
                console.log('‚úÖ Unified password generated and synced:', password);
                return password;
            }
        },
        
        // ‚úÖ NEW: Phone number generation (duplicates allowed)
        phoneNumber: () => {
            const phone = generators.phoneNumber();
            if (phone) {
                document.getElementById('phone').value = phone;
                
                // Add animation with success color (duplicates allowed)
                const phoneInput = document.getElementById('phone');
                phoneInput.style.background = 'linear-gradient(45deg, #d4edda, #d1ecf1)';
                phoneInput.style.transform = 'scale(1.02)';
                phoneInput.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    phoneInput.style.background = '';
                    phoneInput.style.transform = '';
                }, 1500);
                
                console.log('‚úÖ Phone number generated (duplicates allowed):', phone);
                return phone;
            }
        },
        
        showEmailPreview: () => {
            const firstName = document.getElementById('first_name_en').value.trim();
            const lastName = document.getElementById('last_name_en').value.trim();
            const domain = document.getElementById('email_domain').value;
            const previewDiv = document.getElementById('emailPreview');
            const previewText = document.getElementById('emailPreviewText');
            
            if (!previewDiv || !previewText) return;
            
            // Validate English characters
            const englishRegex = /^[a-zA-Z\s]+$/;
            
            if (firstName && lastName) {
                if (englishRegex.test(firstName) && englishRegex.test(lastName)) {
                    const emailPreview = `${firstName.toLowerCase()}.${lastName.charAt(0).toLowerCase()}@${domain}`;
                    previewText.textContent = emailPreview;
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-success';
                } else {
                    previewText.textContent = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô';
                    previewDiv.style.display = 'block';
                    previewDiv.className = 'mt-2 text-warning';
                }
            } else {
                previewDiv.style.display = 'none';
            }
        }
    };
    
    // Event Handlers
    const eventHandlers = {
        handleMagicClick: async (event) => {
            const button = event.target.closest('[data-target]');
            if (!button) return;
            
            const target = button.dataset.target;
            const targetElement = document.getElementById(target);
            if (!targetElement) return;
            
            utils.showLoading(button);
            
            try {
                let value = '';
                
                switch (target) {
                    case 'employee_code':
                        value = generators.employeeCode();
                        break;
                    case 'keycard_id':
                        value = generators.keycardId();
                        break;
                    case 'username':
                        value = generators.username();
                        break;
                    case 'email':
                        value = generators.email();
                        break;
                    case 'computer_password':
                        value = generators.password();
                        break;
                    case 'unified_password':
                        // Use unified password generation
                        autoGenerate.unifiedPassword();
                        utils.showNotification('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ß‡∏° (Email + Login) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', 'success');
                        utils.hideLoading(button);
                        return;
                    case 'copier_code':
                        value = generators.copierCode();
                        break;
                    case 'express_username':
                        value = generators.expressUsername();
                        break;
                    case 'express_password':
                        value = generators.expressPassword();
                        break;
                }
                
                if (value) {
                    targetElement.value = value;
                    
                    if (target === 'email') {
                        // Sync with login_email
                        const loginEmail = document.getElementById('login_email');
                        if (loginEmail) loginEmail.value = value;
                        autoGenerate.showEmailPreview();
                    }
                    
                    // Show different messages based on target
                    let message = '';
                    switch (target) {
                        case 'email':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Email ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                            break;
                        case 'username':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Username ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                            break;
                        case 'employee_code':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                            break;
                        case 'keycard_id':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á ID Keycard ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                            break;
                        case 'express_username':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Express Username ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value} (${value.length} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)`;
                            break;
                        case 'express_password':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™ Express ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value} (4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)`;
                            break;
                        case 'copier_code':
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                            break;
                        default:
                            message = `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á ${target} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${value}`;
                    }
                    
                    utils.showNotification(message);
                }
                
            } catch (error) {
                console.error(`Error generating ${target}:`, error);
                utils.showNotification(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á ${target}`, 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        handlePasswordToggle: (event) => {
            const button = event.target.closest('[data-toggle-password]');
            if (!button) return;
            
            const target = button.dataset.togglePassword;
            const targetElement = document.getElementById(target);
            
            if (targetElement) {
                if (targetElement.type === 'password') {
                    targetElement.type = 'text';
                    button.innerHTML = '<i class="fas fa-eye-slash"></i>';
                } else {
                    targetElement.type = 'password';
                    button.innerHTML = '<i class="fas fa-eye"></i>';
                }
            }
        },
        
        // Department Change Handler - Express v2.0
        handleDepartmentChange: () => {
            const departmentSelect = document.getElementById('department_id');
            const expressSection = document.getElementById('expressSection');
            const expressIndicator = document.getElementById('expressIndicator');
            
            if (!departmentSelect || !expressSection) {
                console.log('‚ùå Department select or express section not found');
                return;
            }
            
            const departmentId = departmentSelect.value;
            
            if (!departmentId) {
                expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                return;
            }
            
            console.log('üè¢ Department selected ID:', departmentId);
            
            // ‡πÉ‡∏ä‡πâ API ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö express_enabled
            fetch(`/api/departments/is-accounting?department_id=${departmentId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.is_express_enabled) {
                        expressSection.style.display = 'block';
                        if (expressIndicator) expressIndicator.style.display = 'inline-block';
                        
                        // Auto-generate Express fields if name is available
                        const firstName = document.getElementById('first_name_en').value.trim();
                        if (firstName) {
                            const expressUsernameEl = document.getElementById('express_username');
                            const expressPasswordEl = document.getElementById('express_password');
                            
                            if (expressUsernameEl && !expressUsernameEl.value) {
                                expressUsernameEl.value = generators.expressUsername();
                            }
                            if (expressPasswordEl && !expressPasswordEl.value) {
                                expressPasswordEl.value = generators.expressPassword();
                            }
                        }
                        
                        utils.showNotification(`‚ö° ${data.department_name}: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Express ‡πÅ‡∏•‡πâ‡∏ß`, 'success');
                        console.log('‚úÖ Express enabled for department:', data.department_name);
                    } else {
                        expressSection.style.display = 'none';
                        if (expressIndicator) expressIndicator.style.display = 'none';
                        
                        // Clear Express fields
                        const expressUsernameEl = document.getElementById('express_username');
                        const expressPasswordEl = document.getElementById('express_password');
                        
                        if (expressUsernameEl) expressUsernameEl.value = '';
                        if (expressPasswordEl) expressPasswordEl.value = '';
                        
                        if (data.department_name) {
                            console.log('üè¢ Department changed to:', data.department_name, '- Express not enabled');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error checking Express eligibility:', error);
                    expressSection.style.display = 'none';
                    if (expressIndicator) expressIndicator.style.display = 'none';
                });
        },
        
        handleInputValidation: (event) => {
            const input = event.target;
            const englishRegex = /^[a-zA-Z\s]*$/;
            
            if (input.id === 'first_name_en' || input.id === 'last_name_en') {
                if (!englishRegex.test(input.value)) {
                    input.style.borderColor = '#dc3545';
                    input.style.boxShadow = '0 0 0 0.2rem rgba(220, 53, 69, 0.25)';
                    
                    // Show warning
                    let warningDiv = input.parentElement.querySelector('.english-warning');
                    if (!warningDiv) {
                        warningDiv = document.createElement('div');
                        warningDiv.className = 'english-warning mt-1 text-danger';
                        warningDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A-Z ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô';
                        input.parentElement.appendChild(warningDiv);
                    }
                    
                    // Remove non-English characters
                    input.value = input.value.replace(/[^a-zA-Z\s]/g, '');
                } else {
                    input.style.borderColor = '';
                    input.style.boxShadow = '';
                    
                    // Remove warning
                    const warningDiv = input.parentElement.querySelector('.english-warning');
                    if (warningDiv) {
                        warningDiv.remove();
                    }
                }
            }
        },
        
        handlePhoneFormat: (event) => {
            let value = event.target.value.replace(/\D/g, '');
            if (value.length >= 3 && value.length <= 6) {
                value = value.slice(0, 3) + '-' + value.slice(3);
            } else if (value.length > 6) {
                value = value.slice(0, 3) + '-' + value.slice(3, 6) + '-' + value.slice(6, 10);
            }
            event.target.value = value;
        },
        
        // Handle Special Permission Switches
        handlePermissionSwitches: () => {
            const vpnSwitch = document.getElementById('vpn_access');
            const printingSwitch = document.getElementById('color_printing');
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnSwitch && vpnStatus) {
                vpnSwitch.addEventListener('change', function() {
                    vpnStatus.textContent = this.checked ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
                    vpnStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
            
            if (printingSwitch && printingStatus) {
                printingSwitch.addEventListener('change', function() {
                    printingStatus.textContent = this.checked ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
                    printingStatus.className = this.checked ? 'text-success' : 'text-muted';
                });
            }
        }
    };
    
    // Form Actions
    const formActions = {
        generateAll: async () => {
            const button = document.getElementById('generateAllBtn');
            utils.showLoading(button);
            
            try {
                console.log('üéØ Starting generateAll Phone Duplicates Fixed...');
                
                // Generate basic codes
                document.getElementById('employee_code').value = generators.employeeCode();
                document.getElementById('keycard_id').value = generators.keycardId();
                
                // ‚úÖ Generate phone number (duplicates allowed)
                autoGenerate.phoneNumber();
                
                // Username ‡πÅ‡∏•‡∏∞ Email generation
                if (document.getElementById('first_name_en').value) {
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                } else {
                    utils.showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πà‡∏≠‡∏ô ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Username ‡πÅ‡∏•‡∏∞ Email ‡πÑ‡∏î‡πâ', 'error');
                    return;
                }
                
                // Generate passwords
                document.getElementById('computer_password').value = generators.password();
                
                // NEW: Generate unified password (Email + Login)
                autoGenerate.unifiedPassword();
                
                // Express fields (‡∏ñ‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà)
                const expressSection = document.getElementById('expressSection');
                if (expressSection && expressSection.style.display !== 'none') {
                    document.getElementById('express_username').value = generators.expressUsername();
                    document.getElementById('express_password').value = generators.expressPassword();
                }
                
                utils.showNotification('üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß)', 'success');
                
            } catch (error) {
                console.error('Error in generateAll:', error);
                utils.showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
            } finally {
                utils.hideLoading(button);
            }
        },
        
        clearAll: () => {
            if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                document.getElementById('employeeForm').reset();
                
                const emailPreview = document.getElementById('emailPreview');
                const expressSection = document.getElementById('expressSection');
                const expressIndicator = document.getElementById('expressIndicator');
                const vpnStatus = document.getElementById('vpnStatus');
                const printingStatus = document.getElementById('printingStatus');
                
                if (emailPreview) emailPreview.style.display = 'none';
                if (expressSection) expressSection.style.display = 'none';
                if (expressIndicator) expressIndicator.style.display = 'none';
                if (vpnStatus) vpnStatus.textContent = '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
                if (printingStatus) printingStatus.textContent = '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
                
                // Re-generate initial codes (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô copier code)
                setTimeout(() => {
                    document.getElementById('employee_code').value = generators.employeeCode();
                    document.getElementById('keycard_id').value = generators.keycardId();
                }, 100);
                
                utils.showNotification('üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß', 'success');
            }
        },
        
        showPreview: () => {
            const formData = new FormData(document.getElementById('employeeForm'));
            const data = {};
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }
            
            const previewContent = document.getElementById('previewContent');
            if (!previewContent) return;
            
            // Get select values with text
            const departmentSelect = document.getElementById('department_id');
            const departmentName = departmentSelect && departmentSelect.selectedIndex > 0 ? 
                departmentSelect.options[departmentSelect.selectedIndex].textContent.trim() : '-';
                
            const roleSelect = document.getElementById('role');
            const roleName = roleSelect && roleSelect.selectedIndex > 0 ? 
                roleSelect.options[roleSelect.selectedIndex].textContent.trim() : '-';
                
            const statusSelect = document.getElementById('status');
            const statusName = statusSelect && statusSelect.selectedIndex > 0 ? 
                statusSelect.options[statusSelect.selectedIndex].textContent.trim() : '-';
            
            const emailDomain = document.getElementById('email_domain').value;
            
            // Check if Express data exists
            const expressSection = document.getElementById('expressSection');
            const isExpressVisible = expressSection && expressSection.style.display !== 'none';
            
            // Get special permissions
            const vpnAccess = document.getElementById('vpn_access').checked;
            const colorPrinting = document.getElementById('color_printing').checked;
            
            // Get unified password
            const unifiedPassword = document.getElementById('unified_password').value;
            
            previewContent.innerHTML = `
                <div class="row">
                    <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h6 class="mb-0"><i class="fas fa-user me-2"></i>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô:</strong></td><td><span class="badge bg-secondary">${data.employee_code || '-'}</span></td></tr>
                                    <tr><td><strong>ID Keycard:</strong></td><td><span class="badge bg-info">${data.keycard_id || '-'}</span></td></tr>
                                    <tr><td><strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏ó‡∏¢):</strong></td><td class="fw-bold text-primary">${data.first_name_th || '-'} ${data.last_name_th || '-'}</td></tr>
                                    <tr><td><strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©):</strong></td><td class="fw-bold">${data.first_name_en || '-'} ${data.last_name_en || '-'}</td></tr>
                                    <tr><td><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong></td><td>${data.phone || '-'} <span class="badge bg-success">‚úÖ ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ</span></td></tr>
                                    <tr><td><strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô:</strong></td><td>${data.nickname ? `<span class="badge bg-light text-dark">"${data.nickname}"</span>` : '-'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0"><i class="fas fa-desktop me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Username:</strong></td><td><span class="badge bg-primary">${data.username || '-'}</span></td></tr>
                                    <tr><td><strong>Password ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå:</strong></td><td><code class="text-success">${data.computer_password || '-'}</code></td></tr>
                                    <tr><td><strong>‡∏£‡∏´‡∏±‡∏™‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£:</strong></td><td>${data.copier_code ? `<span class="badge bg-warning text-dark">${data.copier_code}</span>` : '<span class="text-muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á (On Demand)</span>'}</td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞ Login (‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô) -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-envelope me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞ Login</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong></td><td class="fw-bold text-success">${data.email || '-'}</td></tr>
                                    <tr><td><strong>‡πÇ‡∏î‡πÄ‡∏°‡∏ô:</strong></td><td><span class="badge bg-info">@${emailDomain}</span></td></tr>
                                    <tr><td><strong>Password ‡∏£‡∏ß‡∏°:</strong></td><td><code class="text-success">${unifiedPassword || '-'}</code></td></tr>
                                    <tr><td><strong>‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong></td><td><small class="text-success">‡∏≠‡∏µ‡πÄ‡∏°‡∏• + Login ‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô</small></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-check-circle me-1"></i>
                                    <small><strong>Fixed:</strong> ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Email ‡πÅ‡∏•‡∏∞ Login + ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ‡πÅ‡∏ú‡∏ô‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0"><i class="fas fa-building me-2"></i>‡πÅ‡∏ú‡∏ô‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>‡πÅ‡∏ú‡∏ô‡∏Å:</strong></td><td><span class="badge bg-info">${departmentName}</span></td></tr>
                                    <tr><td><strong>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</strong></td><td class="fw-bold">${data.position || '-'}</td></tr>
                                    <tr><td><strong>‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó:</strong></td><td><span class="badge bg-secondary">${roleName}</span></td></tr>
                                    <tr><td><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong></td><td><span class="badge bg-${data.status === 'active' ? 'success' : 'danger'}">${statusName}</span></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    ${isExpressVisible ? `
                    <!-- ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Express v2.0 Enhanced -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-danger">
                            <div class="card-header bg-danger text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-bolt me-2"></i>‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Express v2.0
                                    <span class="badge bg-dark text-white ms-2">Enhanced</span>
                                </h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>Express Username:</strong></td><td><span class="badge bg-warning text-dark">${data.express_username || '-'}</span> <small class="text-success">(${(data.express_username || '').length} ‡∏ï‡∏±‡∏ß)</small></td></tr>
                                    <tr><td><strong>Express Password:</strong></td><td><code class="text-success">${data.express_password || '-'}</code> <small class="text-info">(4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)</small></td></tr>
                                    <tr><td><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong></td><td><small class="text-muted">‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Express</small></td></tr>
                                </table>
                                <div class="alert alert-success mt-2 mb-0">
                                    <i class="fas fa-check-circle me-1"></i>
                                    <small><strong>Enhanced:</strong> Username 1-7 ‡∏ï‡∏±‡∏ß, Password 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥, ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    ` : ''}
                    
                    <!-- ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏© -->
                    <div class="col-md-6 mb-4">
                        <div class="card border-secondary">
                            <div class="card-header bg-secondary text-white">
                                <h6 class="mb-0"><i class="fas fa-shield-alt me-2"></i>‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr><td><strong>‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô VPN:</strong></td><td><span class="badge bg-${vpnAccess ? 'success' : 'secondary'}">${vpnAccess ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï'}</span></td></tr>
                                    <tr><td><strong>‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏™‡∏µ:</strong></td><td><span class="badge bg-${colorPrinting ? 'warning text-dark' : 'secondary'}">${colorPrinting ? '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' : '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï'}</span></td></tr>
                                    <tr><td><strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:</strong></td><td><small class="text-muted">${(vpnAccess || colorPrinting) ? '‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©' : '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô'}</small></td></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Phone Duplicates Fixed Summary -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card border-success">
                            <div class="card-header bg-success text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-phone me-2"></i>‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥ - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h6 class="text-success"><i class="fas fa-database me-1"></i> Database Level</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-trash text-danger me-2"></i>‡∏•‡∏ö unique constraint</li>
                                            <li><i class="fas fa-check text-success me-2"></i>Phone field = string ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤</li>
                                            <li><i class="fas fa-check text-success me-2"></i>Migration ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-4">
                                        <h6 class="text-info"><i class="fas fa-code me-1"></i> Code Level</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-edit text-warning me-2"></i>EmployeeRequest.php ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</li>
                                            <li><i class="fas fa-edit text-warning me-2"></i>EmployeeController.php ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</li>
                                            <li><i class="fas fa-eye text-primary me-2"></i>UI ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-4">
                                        <h6 class="text-primary"><i class="fas fa-shield-alt me-1"></i> Security</h6>
                                        <ul class="list-unstyled">
                                            <li><i class="fas fa-lock text-danger me-2"></i>Email ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á unique</li>
                                            <li><i class="fas fa-lock text-danger me-2"></i>Username ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á unique</li>
                                            <li><i class="fas fa-unlock text-success me-2"></i>Phone ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <hr>
                                
                                <div class="row">
                                    <div class="col-12">
                                        <div class="alert alert-success mb-0">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <h6><i class="fas fa-users me-1"></i> ‡πÉ‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÑ‡∏î‡πâ:</h6>
                                                    <ul class="mb-0">
                                                        <li>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <strong>‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß:</strong> ‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ</li>
                                                        <li>üè¢ <strong>‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô:</strong> ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô</li>
                                                        <li>üè† <strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ö‡πâ‡∏≤‡∏ô:</strong> ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô</li>
                                                    </ul>
                                                </div>
                                                <div class="col-md-6">
                                                    <h6><i class="fas fa-check-circle me-1"></i> ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</h6>
                                                    <ul class="mb-0">
                                                        <li>‚úÖ <strong>Error ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ:</strong> ‡πÑ‡∏°‡πà‡∏°‡∏µ "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ã‡πâ‡∏≥" ‡πÅ‡∏•‡πâ‡∏ß</li>
                                                        <li>‚úÖ <strong>‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô:</strong> ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô</li>
                                                        <li>‚úÖ <strong>Express ‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:</strong> ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Test Results -->
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-vial me-2"></i>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <i class="fas fa-phone fa-2x text-success mb-2"></i>
                                            <h6>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</h6>
                                            <span class="badge bg-success">‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ</span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <i class="fas fa-envelope fa-2x text-danger mb-2"></i>
                                            <h6>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h6>
                                            <span class="badge bg-danger">Unique</span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <i class="fas fa-user fa-2x text-danger mb-2"></i>
                                            <h6>Username</h6>
                                            <span class="badge bg-danger">Unique</span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <i class="fas fa-bolt fa-2x text-warning mb-2"></i>
                                            <h6>Express</h6>
                                            <span class="badge bg-warning text-dark">‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        },
        
        // ‚úÖ NEW: Test phone duplicate functionality  
        showPhoneDuplicateTest: () => {
            const modal = new bootstrap.Modal(document.getElementById('phoneDuplicateModal'));
            modal.show();
        }
    };
    
    // Event Listeners Setup
    try {
        // Click handlers
        document.addEventListener('click', eventHandlers.handleMagicClick);
        document.addEventListener('click', eventHandlers.handlePasswordToggle);
        
        // Department change handler
        const departmentSelect = document.getElementById('department_id');
        if (departmentSelect) {
            departmentSelect.addEventListener('change', eventHandlers.handleDepartmentChange);
            console.log('‚úÖ Department change listener attached (Phone Duplicates Fixed Version)');
        }
        
        // Phone format handler
        const phoneInput = document.getElementById('phone');
        if (phoneInput) {
            phoneInput.addEventListener('input', eventHandlers.handlePhoneFormat);
            console.log('‚úÖ Phone format handler attached (duplicates allowed)');
            
            // ‚úÖ Add phone duplicate notification on focus
            phoneInput.addEventListener('focus', function() {
                if (!phoneInput.dataset.notificationShown) {
                    utils.showNotification('üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß - ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!', 'success');
                    phoneInput.dataset.notificationShown = 'true';
                }
            });
        }
        
        // English validation handlers
        const firstNameEn = document.getElementById('first_name_en');
        const lastNameEn = document.getElementById('last_name_en');
        
        if (firstNameEn) {
            firstNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            firstNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.username();
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                    
                    // Auto-generate Express fields if Express section is visible
                    const expressSection = document.getElementById('expressSection');
                    if (expressSection && expressSection.style.display !== 'none') {
                        const expressUsername = document.getElementById('express_username');
                        if (expressUsername && !expressUsername.value) {
                            expressUsername.value = generators.expressUsername();
                        }
                    }
                }, 300);
            });
        }
        
        if (lastNameEn) {
            lastNameEn.addEventListener('input', eventHandlers.handleInputValidation);
            lastNameEn.addEventListener('input', () => {
                setTimeout(() => {
                    autoGenerate.email();
                    autoGenerate.showEmailPreview();
                }, 300);
            });
        }
        
        // Email domain change handler
        const emailDomain = document.getElementById('email_domain');
        if (emailDomain) {
            emailDomain.addEventListener('change', () => {
                autoGenerate.email();
                autoGenerate.showEmailPreview();
            });
        }
        
        // Email input sync with login_email
        const emailInput = document.getElementById('email');
        if (emailInput) {
            emailInput.addEventListener('input', (e) => {
                const loginEmail = document.getElementById('login_email');
                if (loginEmail) {
                    loginEmail.value = e.target.value;
                }
            });
        }
        
        // NEW: Unified password sync handler
        const unifiedPasswordInput = document.getElementById('unified_password');
        if (unifiedPasswordInput) {
            unifiedPasswordInput.addEventListener('input', (e) => {
                // Auto-sync with hidden fields for backend compatibility
                const emailPassword = document.getElementById('email_password');
                const systemPassword = document.getElementById('password');
                
                if (emailPassword) emailPassword.value = e.target.value;
                if (systemPassword) systemPassword.value = e.target.value;
                
                console.log('üîÑ Unified password synced:', e.target.value);
            });
        }
        
        // Quick Action buttons
        const generateAllBtn = document.getElementById('generateAllBtn');
        if (generateAllBtn) {
            generateAllBtn.addEventListener('click', formActions.generateAll);
        }
        
        const clearAllBtn = document.getElementById('clearAllBtn');
        if (clearAllBtn) {
            clearAllBtn.addEventListener('click', formActions.clearAll);
        }
        
        const previewBtn = document.getElementById('previewBtn');
        if (previewBtn) {
            previewBtn.addEventListener('click', formActions.showPreview);
        }
        
        // ‚úÖ NEW: Phone duplicate test button
        const testPhoneDuplicateBtn = document.getElementById('testPhoneDuplicateBtn');
        if (testPhoneDuplicateBtn) {
            testPhoneDuplicateBtn.addEventListener('click', formActions.showPhoneDuplicateTest);
            console.log('‚úÖ Phone duplicate test button attached');
        }
        
        // Computer generation buttons
        const generateComputerBtn = document.getElementById('generateComputerBtn');
        if (generateComputerBtn) {
            generateComputerBtn.addEventListener('click', async () => {
                const button = generateComputerBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πà‡∏≠‡∏ô', 'error');
                        return;
                    }
                    
                    autoGenerate.username();
                    await new Promise(resolve => setTimeout(resolve, 200));
                    
                    if (document.getElementById('last_name_en').value) {
                        autoGenerate.email();
                    }
                    
                    document.getElementById('computer_password').value = generators.password();
                    
                    utils.showNotification('üíª ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', 'success');
                } catch (error) {
                    console.error('Error in generateComputer:', error);
                    utils.showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // Express generation button (Enhanced)
        const generateExpressBtn = document.getElementById('generateExpressBtn');
        if (generateExpressBtn) {
            generateExpressBtn.addEventListener('click', async () => {
                const button = generateExpressBtn;
                utils.showLoading(button);
                
                try {
                    if (!document.getElementById('first_name_en').value) {
                        utils.showNotification('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πà‡∏≠‡∏ô', 'error');
                        return;
                    }
                    
                    const username = generators.expressUsername();
                    const password = generators.expressPassword();
                    
                    document.getElementById('express_username').value = username;
                    document.getElementById('express_password').value = password;
                    
                    utils.showNotification(`‚ö° ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Express ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Username: ${username} (${username.length} ‡∏ï‡∏±‡∏ß), Password: ${password} (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)`, 'success');
                } catch (error) {
                    console.error('Error in generateExpress:', error);
                    utils.showNotification('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Express', 'error');
                } finally {
                    utils.hideLoading(button);
                }
            });
        }
        
        // Setup permission switches
        eventHandlers.handlePermissionSwitches();
        
        // Form submit handler
        const employeeForm = document.getElementById('employeeForm');
        if (employeeForm) {
            employeeForm.addEventListener('submit', function(e) {
                const submitBtn = document.getElementById('submitBtn');
                if (submitBtn) {
                    utils.showLoading(submitBtn);
                }
            });
        }
        
        console.log('‚úÖ All event listeners attached successfully (Phone Duplicates Fixed Version)');
        
    } catch (error) {
        console.error('‚ùå Error setting up event listeners:', error);
    }
    
    // Initial setup
    setTimeout(() => {
        console.log('üîß Starting initial setup... (Phone Duplicates Fixed Version)');
        
        try {
            // Auto-generate employee code and keycard if empty
            const employeeCodeEl = document.getElementById('employee_code');
            const keycardIdEl = document.getElementById('keycard_id');
            
            if (employeeCodeEl && !employeeCodeEl.value) {
                employeeCodeEl.value = generators.employeeCode();
                console.log('‚úÖ Employee code generated');
            }
            
            if (keycardIdEl && !keycardIdEl.value) {
                keycardIdEl.value = generators.keycardId();
                console.log('‚úÖ Keycard ID generated');
            }
            
            // Initialize department change handler
            eventHandlers.handleDepartmentChange();
            
            // Force trigger department change if already selected
            const departmentSelect = document.getElementById('department_id');
            if (departmentSelect && departmentSelect.value) {
                console.log('üîÑ Force triggering department change for:', departmentSelect.options[departmentSelect.selectedIndex]?.textContent);
                eventHandlers.handleDepartmentChange();
            }
            
            console.log('‚úÖ Department handler initialized (Phone Duplicates Fixed Version)');
            
            // Initialize email preview
            autoGenerate.showEmailPreview();
            console.log('‚úÖ Email preview initialized');
            
            // Initialize permission switches
            const vpnStatus = document.getElementById('vpnStatus');
            const printingStatus = document.getElementById('printingStatus');
            
            if (vpnStatus) vpnStatus.textContent = '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
            if (printingStatus) printingStatus.textContent = '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï';
            
            console.log('‚úÖ Permission switches initialized');
            
            // ‚úÖ Show phone duplicates fix notification
            setTimeout(() => {
                utils.showNotification('üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß! (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢)', 'success');
            }, 2000);
            
            // Debug functions for testing (Phone Duplicates Fixed Version)
            window.testPhoneDuplicates = function() {
                console.log('üìû Testing Phone Duplicates Feature:');
                console.log('   1. Phone Generator:', generators.phoneNumber());
                console.log('   2. Phone Auto-Generate Test:');
                autoGenerate.phoneNumber();
                console.log('   3. Phone field value:', document.getElementById('phone').value);
                console.log('   4. Duplicates allowed: YES ‚úÖ');
            };
            
            window.testPhoneValidation = function() {
                const testPhone = '087-169-5054';
                document.getElementById('phone').value = testPhone;
                console.log('üìû Phone Validation Test:');
                console.log('   Test phone:', testPhone);
                console.log('   Should be allowed: YES ‚úÖ');
                console.log('   Try submitting form with duplicate phone - no error expected');
            };
            
            window.showPhoneDuplicatesInfo = function() {
                console.log('üìû Phone Duplicates Fix Information:');
                console.log('   ‚úÖ Database: unique constraint removed');
                console.log('   ‚úÖ Request: validation rule removed');
                console.log('   ‚úÖ Controller: unique check removed');
                console.log('   ‚úÖ UI: duplicate allowed badge added');
                console.log('   üì± Use cases: families, shared office phones, home numbers');
                console.log('   üîí Security: email, username still unique');
            };
            
            console.log('üß™ Phone Duplicates Debug functions available:');
            console.log('   - testPhoneDuplicates() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ã‡πâ‡∏≥');
            console.log('   - testPhoneValidation() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö validation');
            console.log('   - showPhoneDuplicatesInfo() - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
            
            console.log('‚úÖ Employee Create Form Ready - Phone Duplicates Fixed Version');
            console.log('üìû Phone Duplicates: ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢)');
            console.log('üîí Security: Email, Username, Express Username ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á unique');
            console.log('‚ö° Express v2.0: ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
            console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Benefits: ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß, ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏® ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ');
            console.log('üéØ Test: ‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ error!');
            console.log('üöÄ Status: PHONE DUPLICATES ALLOWED - PROBLEM FIXED! ‚úÖ');
            
        } catch (error) {
            console.error('‚ùå Error in initial setup:', error);
        }
    }, 1000);
});

// Modal functions
function submitForm() {
    const form = document.getElementById('employeeForm');
    if (form) {
        form.submit();
    }
}

// Global Phone Duplicates test functions
window.PhoneDuplicatesTest = {
    testPhoneGeneration: function() {
        const phone = document.querySelector('#phone');
        if (phone) {
            const generators = {
                phoneNumber: () => {
                    const prefixes = ['08', '09', '06', '02'];
                    const prefix = prefixes[Math.floor(Math.random() * prefixes.length)];
                    const middle = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
                    const last = Math.floor(Math.random() * 10000).toString().padStart(4, '0');
                    return `${prefix}${middle}-${last}`;
                }
            };
            
            const newPhone = generators.phoneNumber();
            phone.value = newPhone;
            
            console.log('üìû Phone Generation Test Result:');
            console.log('   Generated Phone:', newPhone);
            console.log('   Field Updated:', phone.value);
            console.log('   Duplicates Allowed:', true);
        }
    },
    
    testDuplicateScenario: function() {
        const duplicatePhone = '087-169-5054';
        const phone = document.querySelector('#phone');
        if (phone) {
            phone.value = duplicatePhone;
            
            console.log('üìû Duplicate Phone Test:');
            console.log('   Test Phone:', duplicatePhone);
            console.log('   Common Use Cases:');
            console.log('     üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family members sharing home phone');
            console.log('     üè¢ Colleagues sharing office phone');
            console.log('     üì± Multiple employees with same mobile');
            console.log('   Expected Result: NO ERROR on form submit ‚úÖ');
        }
    },
    
    showFixedFeatures: function() {
        console.log('‚úÖ Phone Duplicates - Features Fixed:');
        console.log('   üóÑÔ∏è Database: Removed unique constraint from phone column');
        console.log('   üìù Request: Removed unique validation rule');
        console.log('   üéÆ Controller: Removed unique check logic');
        console.log('   üé® UI: Added "duplicates allowed" indicators');
        console.log('   üîí Security: Other unique fields preserved');
        console.log('   ‚ö° Express: System still works normally');
    },
    
    info: function() {
        console.log('üìû Phone Duplicates Test Functions:');
        console.log('   PhoneDuplicatesTest.testPhoneGeneration() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£');
        console.log('   PhoneDuplicatesTest.testDuplicateScenario() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ã‡πâ‡∏≥');
        console.log('   PhoneDuplicatesTest.showFixedFeatures() - ‡∏î‡∏π‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
        console.log('');
        console.log('üéØ Quick Test: Try entering duplicate phone "087-169-5054" and submit');
        console.log('‚úÖ Expected: No validation error (duplicates now allowed)');
    }
};

// Show phone duplicates info on load
console.log('üìû ‡∏û‡∏¥‡∏°‡∏û‡πå PhoneDuplicatesTest.info() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö Phone Duplicates');
</script>
@endpush
