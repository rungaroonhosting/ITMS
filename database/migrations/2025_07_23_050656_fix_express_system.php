<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // ===============================================
        // 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏£‡∏≤‡∏á employees (‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
        // ===============================================
        Schema::table('employees', function (Blueprint $table) {
            // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° columns ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
            if (!Schema::hasColumn('employees', 'express_username')) {
                $table->string('express_username', 7)->nullable()->after('email_password');
            }
            
            if (!Schema::hasColumn('employees', 'express_password')) {
                $table->string('express_password', 4)->nullable()->after('express_username');
            }
        });

        // ===============================================
        // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° indexes ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
        // ===============================================
        try {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ index ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏´‡∏°
            $indexes = DB::select("SHOW INDEX FROM employees WHERE Key_name = 'employees_express_username_index'");
            
            if (empty($indexes)) {
                Schema::table('employees', function (Blueprint $table) {
                    $table->index('express_username', 'employees_express_username_index');
                });
                echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á express_username index ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n";
            } else {
                echo "‚ÑπÔ∏è express_username index ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\n";
            }
        } catch (\Exception $e) {
            echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á index: " . $e->getMessage() . "\n";
        }

        // ===============================================
        // 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° Express support ‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á departments
        // ===============================================
        Schema::table('departments', function (Blueprint $table) {
            if (!Schema::hasColumn('departments', 'express_enabled')) {
                $table->boolean('express_enabled')->default(false)->after('name')
                      ->comment('‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Express ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏ô‡∏µ‡πâ');
            }
            
            if (!Schema::hasColumn('departments', 'express_auto_detect')) {
                $table->boolean('express_auto_detect')->default(true)->after('express_enabled')
                      ->comment('‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥');
            }
        });

        // ===============================================
        // 4. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        // ===============================================
        try {
            $accountingKeywords = ['‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', 'accounting', 'finance'];
            
            foreach ($accountingKeywords as $keyword) {
                $updated = DB::table('departments')
                    ->where('name', 'like', "%{$keyword}%")
                    ->where('express_enabled', false) // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î
                    ->update(['express_enabled' => true]);
                
                if ($updated > 0) {
                    echo "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Express ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å '{$keyword}': {$updated} ‡πÅ‡∏ú‡∏ô‡∏Å\n";
                }
            }
        } catch (\Exception $e) {
            echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ú‡∏ô‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " . $e->getMessage() . "\n";
        }

        // ===============================================
        // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        // ===============================================
        try {
            $this->seedSampleData();
        } catch (\Exception $e) {
            echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: " . $e->getMessage() . "\n";
        }

        echo "üéâ Express System v2.0 ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n";
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        // ‡∏•‡∏ö Express features
        Schema::table('departments', function (Blueprint $table) {
            if (Schema::hasColumn('departments', 'express_enabled')) {
                $table->dropColumn('express_enabled');
            }
            if (Schema::hasColumn('departments', 'express_auto_detect')) {
                $table->dropColumn('express_auto_detect');
            }
        });

        // ‡∏•‡∏ö index (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        try {
            Schema::table('employees', function (Blueprint $table) {
                $table->dropIndex('employees_express_username_index');
            });
        } catch (\Exception $e) {
            // Ignore if index doesn't exist
        }

        // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå Express data
        DB::table('employees')->update([
            'express_username' => null,
            'express_password' => null
        ]);

        echo "üîÑ Rollback Express System ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n";
    }

    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
     */
    private function seedSampleData()
    {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏´‡∏° ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
        $accountingDept = DB::table('departments')->where('name', 'like', '%‡∏ö‡∏±‡∏ç‡∏ä‡∏µ%')->first();
        
        if (!$accountingDept) {
            DB::table('departments')->insert([
                'name' => '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
                'express_enabled' => true,
                'express_auto_detect' => true,
                'created_at' => now(),
                'updated_at' => now()
            ]);
            echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á\n";
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î Express
        $otherDepts = [
            '‡πÅ‡∏ú‡∏ô‡∏Å‡πÑ‡∏≠‡∏ó‡∏µ' => false,
            '‡πÅ‡∏ú‡∏ô‡∏Å‡∏Ç‡∏≤‡∏¢' => false,
            '‡πÅ‡∏ú‡∏ô‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î' => false,
            '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•' => false
        ];

        foreach ($otherDepts as $deptName => $expressEnabled) {
            $exists = DB::table('departments')->where('name', $deptName)->exists();
            
            if (!$exists) {
                DB::table('departments')->insert([
                    'name' => $deptName,
                    'express_enabled' => $expressEnabled,
                    'express_auto_detect' => true,
                    'created_at' => now(),
                    'updated_at' => now()
                ]);
            }
        }

        echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n";
    }
};
